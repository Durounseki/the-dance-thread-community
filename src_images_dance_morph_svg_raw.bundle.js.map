{"version":3,"file":"src_images_dance_morph_svg_raw.bundle.js","mappings":"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","sources":["webpack://the-dance-thread/./src/images/dance_morph.svg"],"sourcesContent":["export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"75.648438mm\\\"\\n   height=\\\"15.154428mm\\\"\\n   viewBox=\\\"0 0 75.648438 15.154428\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:ns1=\\\"https://launchpad.net/jessyink\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#000000\\\"\\n     borderopacity=\\\"0.25\\\"\\n     inkscape:showpageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#d1d1d1\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"1.4582644\\\"\\n     inkscape:cx=\\\"381.96092\\\"\\n     inkscape:cy=\\\"442.30663\\\"\\n     inkscape:window-width=\\\"1312\\\"\\n     inkscape:window-height=\\\"819\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"25\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"step1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-67.175781,-62.961102)\\\"\\n     style=\\\"display:inline\\\">\\n    <path\\n       id=\\\"text1\\\"\\n       style=\\\"font-size:21.1667px;font-family:'Intro Demo';-inkscape-font-specification:'Intro Demo, Normal';letter-spacing:0.529167px;word-spacing:0px;fill:#ffa6db;stroke:#0ff5ff;stroke-width:0;stroke-linecap:square\\\"\\n       sodipodi:type=\\\"inkscape:offset\\\"\\n       inkscape:radius=\\\"0\\\"\\n       inkscape:original=\\\"M 93.753906 75.298828 L 87.085938 89.755859 L 87.085938 90.304688 L 90.789062 90.304688 L 91.658203 88.443359 L 97.5 88.443359 L 98.367188 90.304688 L 102.07227 90.304688 L 102.07227 89.755859 L 95.382812 75.298828 L 93.753906 75.298828 z M 128.29688 75.320312 C 124.52921 75.320312 120.72038 77.858809 120.69922 82.896484 C 120.72042 87.934159 124.5292 90.474292 128.29688 90.453125 C 131.45072 90.453125 134.77388 88.802334 135.32422 84.611328 L 131.59961 84.611328 C 131.19744 86.19883 129.90555 87.003906 128.29688 87.003906 C 126.05321 86.982736 124.61328 85.076654 124.61328 82.896484 C 124.61328 80.441147 126.07437 78.769531 128.29688 78.769531 C 129.88439 78.769531 131.00599 79.446383 131.53516 80.949219 L 135.26172 80.949219 C 134.69022 76.991046 131.36604 75.320313 128.29688 75.320312 z M 104.54883 75.425781 L 104.54883 90.304688 L 108.46484 90.304688 L 108.46484 83.023438 L 115.93555 90.326172 L 117.29102 90.326172 L 117.29102 75.488281 L 113.41602 75.488281 L 113.41602 82.75 L 105.92383 75.425781 L 104.54883 75.425781 z M 72.544922 75.488281 L 72.544922 90.304688 L 78.132812 90.304688 C 87.784828 90.262357 87.784828 75.530614 78.132812 75.488281 L 72.544922 75.488281 z M 138.75391 75.488281 L 138.75391 90.304688 L 148.19336 90.304688 L 148.19336 86.939453 L 142.52148 86.939453 L 142.52148 84.335938 L 147.55859 84.335938 L 147.55859 80.970703 L 142.52148 80.970703 L 142.52148 78.875 L 148.00391 78.875 L 148.00391 75.488281 L 138.75391 75.488281 z M 76.332031 78.939453 L 78.132812 78.939453 C 82.852987 78.939453 82.852986 86.855469 78.132812 86.855469 L 76.332031 86.855469 L 76.332031 78.939453 z M 94.556641 81.310547 L 96.271484 85.205078 L 92.884766 85.205078 L 94.556641 81.310547 z \\\"\\n       d=\\\"m 93.753906,75.298828 -6.667968,14.457031 v 0.548829 h 3.703124 l 0.869141,-1.861329 H 97.5 l 0.867188,1.861329 h 3.705082 V 89.755859 L 95.382812,75.298828 Z m 34.542974,0.02148 c -3.76767,0 -7.5765,2.538497 -7.59766,7.576172 0.0212,5.037675 3.82998,7.577808 7.59766,7.556641 3.15384,0 6.477,-1.650791 7.02734,-5.841797 h -3.72461 c -0.40217,1.587502 -1.69406,2.392578 -3.30273,2.392578 -2.24367,-0.02117 -3.6836,-1.927252 -3.6836,-4.107422 0,-2.455337 1.46109,-4.126953 3.6836,-4.126953 1.58751,0 2.70911,0.676852 3.23828,2.179688 h 3.72656 c -0.5715,-3.958173 -3.89568,-5.628906 -6.96484,-5.628907 z m -23.74805,0.105469 v 14.878907 h 3.91601 v -7.28125 l 7.47071,7.302734 h 1.35547 V 75.488281 h -3.875 V 82.75 l -7.49219,-7.324219 z m -32.003908,0.0625 v 14.816407 h 5.58789 c 9.652016,-0.04233 9.652016,-14.774074 0,-14.816407 z m 66.208988,0 v 14.816407 h 9.43945 v -3.365235 h -5.67188 v -2.603515 h 5.03711 v -3.365235 h -5.03711 V 78.875 h 5.48243 v -3.386719 z m -62.421879,3.451172 h 1.800781 c 4.720175,0 4.720174,7.916016 0,7.916016 h -1.800781 z m 18.22461,2.371094 1.714843,3.894531 h -3.386718 z\\\"\\n       transform=\\\"translate(-5.369141,-12.337726)\\\" />\\n  </g>\\n  <g\\n     inkscape:label=\\\"step2\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"g22\\\"\\n     transform=\\\"translate(-67.175781,-62.961102)\\\"\\n     style=\\\"display:inline\\\">\\n    <path\\n       id=\\\"path22\\\"\\n       style=\\\"font-size:21.1667px;font-family:'Intro Demo';-inkscape-font-specification:'Intro Demo, Normal';letter-spacing:0.529167px;word-spacing:0px;fill:#ffa6db;stroke:#0ff5ff;stroke-width:0;stroke-linecap:square\\\"\\n       sodipodi:type=\\\"inkscape:offset\\\"\\n       inkscape:radius=\\\"-1.0289403\\\"\\n       inkscape:original=\\\"M 93.753906 75.298828 L 87.085938 89.755859 L 87.085938 90.304688 L 90.789062 90.304688 L 91.658203 88.443359 L 97.5 88.443359 L 98.367188 90.304688 L 102.07227 90.304688 L 102.07227 89.755859 L 95.382812 75.298828 L 93.753906 75.298828 z M 128.29688 75.320312 C 124.52921 75.320312 120.72038 77.858809 120.69922 82.896484 C 120.72042 87.934159 124.5292 90.474292 128.29688 90.453125 C 131.45072 90.453125 134.77388 88.802334 135.32422 84.611328 L 131.59961 84.611328 C 131.19744 86.19883 129.90555 87.003906 128.29688 87.003906 C 126.05321 86.982736 124.61328 85.076654 124.61328 82.896484 C 124.61328 80.441147 126.07437 78.769531 128.29688 78.769531 C 129.88439 78.769531 131.00599 79.446383 131.53516 80.949219 L 135.26172 80.949219 C 134.69022 76.991046 131.36604 75.320313 128.29688 75.320312 z M 104.54883 75.425781 L 104.54883 90.304688 L 108.46484 90.304688 L 108.46484 83.023438 L 115.93555 90.326172 L 117.29102 90.326172 L 117.29102 75.488281 L 113.41602 75.488281 L 113.41602 82.75 L 105.92383 75.425781 L 104.54883 75.425781 z M 72.544922 75.488281 L 72.544922 90.304688 L 78.132812 90.304688 C 87.784828 90.262357 87.784828 75.530614 78.132812 75.488281 L 72.544922 75.488281 z M 138.75391 75.488281 L 138.75391 90.304688 L 148.19336 90.304688 L 148.19336 86.939453 L 142.52148 86.939453 L 142.52148 84.335938 L 147.55859 84.335938 L 147.55859 80.970703 L 142.52148 80.970703 L 142.52148 78.875 L 148.00391 78.875 L 148.00391 75.488281 L 138.75391 75.488281 z M 76.332031 78.939453 L 78.132812 78.939453 C 82.852987 78.939453 82.852986 86.855469 78.132812 86.855469 L 76.332031 86.855469 L 76.332031 78.939453 z M 94.556641 81.310547 L 96.271484 85.205078 L 92.884766 85.205078 L 94.556641 81.310547 z \\\"\\n       d=\\\"m 94.412109,76.328125 -5.970703,12.947266 h 1.69336 l 0.591796,-1.267579 a 1.0290432,1.0290432 0 0 1 0.931641,-0.59375 H 97.5 a 1.0290432,1.0290432 0 0 1 0.933594,0.595704 l 0.589843,1.265625 h 1.691403 L 94.724609,76.328125 Z m 33.884761,0.02148 c -1.65274,0 -3.30624,0.561067 -4.52148,1.638672 -1.21445,1.076907 -2.03633,2.650308 -2.04687,4.908203 0.0106,2.257902 0.83331,3.830074 2.04687,4.904297 1.21435,1.074921 2.86496,1.632321 4.51563,1.623047 a 1.0290432,1.0290432 0 0 1 0.006,0 c 1.3974,0 2.80693,-0.372648 3.88672,-1.154297 0.80612,-0.583539 1.36398,-1.493882 1.74219,-2.628906 h -1.68164 c -0.74311,1.506451 -2.27709,2.392578 -3.94727,2.392578 a 1.0290432,1.0290432 0 0 1 -0.01,0 c -2.82219,-0.02663 -4.70313,-2.503497 -4.70313,-5.136719 0,-1.431763 0.43116,-2.725241 1.26758,-3.667968 0.83642,-0.942728 2.0761,-1.488282 3.44531,-1.488282 1.57573,0 2.8726,0.862334 3.67774,2.179688 h 1.86133 c -0.38333,-1.027783 -0.92959,-1.872581 -1.71485,-2.429688 -1.07887,-0.765413 -2.47634,-1.140624 -3.82422,-1.140625 z m -54.722651,0.167969 v 12.757813 h 4.558593 c 2.148889,-0.01049 3.631681,-0.798693 4.652344,-1.972657 1.02136,-1.174765 1.558594,-2.783563 1.558594,-4.40625 0,-1.622686 -0.537234,-3.231484 -1.558594,-4.40625 -1.02136,-1.174765 -2.504983,-1.963221 -4.65625,-1.972656 z m 40.871091,0 V 82.75 a 1.0290432,1.0290432 0 0 1 -1.74804,0.736328 l -7.11914,-6.958984 v 12.748047 h 1.85742 v -6.251954 a 1.0290432,1.0290432 0 0 1 1.74804,-0.736328 l 7.07813,6.917969 v -12.6875 z m 25.33789,0 v 12.757813 h 7.38086 V 87.96875 h -4.64258 a 1.0290432,1.0290432 0 0 1 -1.02929,-1.029297 v -2.603516 a 1.0290432,1.0290432 0 0 1 1.02929,-1.029296 h 4.00782 V 82 h -4.00782 a 1.0290432,1.0290432 0 0 1 -1.02929,-1.029297 V 78.875 a 1.0290432,1.0290432 0 0 1 1.02929,-1.029297 h 4.45313 v -1.328125 z m -63.451169,1.392578 h 1.800781 c 1.467642,0 2.697624,0.664908 3.460938,1.625 0.763314,0.960093 1.107422,2.169268 1.107422,3.363281 0,1.194014 -0.344108,2.401236 -1.107422,3.361329 -0.763314,0.960092 -1.993296,1.625 -3.460938,1.625 h -1.800781 a 1.0290432,1.0290432 0 0 1 -1.029297,-1.029297 v -7.916016 a 1.0290432,1.0290432 0 0 1 1.029297,-1.029297 z m 18.220703,2.371094 a 1.0290432,1.0290432 0 0 1 0.945313,0.615234 l 1.714844,3.894532 a 1.0290432,1.0290432 0 0 1 -0.941407,1.443359 h -3.386718 a 1.0290432,1.0290432 0 0 1 -0.945313,-1.435547 l 1.671875,-3.894531 a 1.0290432,1.0290432 0 0 1 0.941406,-0.623047 z\\\"\\n       transform=\\\"translate(-5.369141,-12.337726)\\\"\\n       inkscape:label=\\\"path22\\\" />\\n  </g>\\n  <g\\n     inkscape:label=\\\"step3\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"g23\\\"\\n     transform=\\\"translate(-67.175781,-62.961102)\\\"\\n     style=\\\"display:inline\\\">\\n    <path\\n       id=\\\"path23\\\"\\n       style=\\\"font-size:21.1667px;font-family:'Intro Demo';-inkscape-font-specification:'Intro Demo, Normal';letter-spacing:0.529167px;word-spacing:0px;fill:#ffa6db;stroke:#0ff5ff;stroke-width:0;stroke-linecap:square\\\"\\n       sodipodi:type=\\\"inkscape:offset\\\"\\n       inkscape:radius=\\\"-1.4659959\\\"\\n       inkscape:original=\\\"M 93.753906 75.298828 L 87.085938 89.755859 L 87.085938 90.304688 L 90.789062 90.304688 L 91.658203 88.443359 L 97.5 88.443359 L 98.367188 90.304688 L 102.07227 90.304688 L 102.07227 89.755859 L 95.382812 75.298828 L 93.753906 75.298828 z M 128.29688 75.320312 C 124.52921 75.320312 120.72038 77.858809 120.69922 82.896484 C 120.72042 87.934159 124.5292 90.474292 128.29688 90.453125 C 131.45072 90.453125 134.77388 88.802334 135.32422 84.611328 L 131.59961 84.611328 C 131.19744 86.19883 129.90555 87.003906 128.29688 87.003906 C 126.05321 86.982736 124.61328 85.076654 124.61328 82.896484 C 124.61328 80.441147 126.07437 78.769531 128.29688 78.769531 C 129.88439 78.769531 131.00599 79.446383 131.53516 80.949219 L 135.26172 80.949219 C 134.69022 76.991046 131.36604 75.320313 128.29688 75.320312 z M 104.54883 75.425781 L 104.54883 90.304688 L 108.46484 90.304688 L 108.46484 83.023438 L 115.93555 90.326172 L 117.29102 90.326172 L 117.29102 75.488281 L 113.41602 75.488281 L 113.41602 82.75 L 105.92383 75.425781 L 104.54883 75.425781 z M 72.544922 75.488281 L 72.544922 90.304688 L 78.132812 90.304688 C 87.784828 90.262357 87.784828 75.530614 78.132812 75.488281 L 72.544922 75.488281 z M 138.75391 75.488281 L 138.75391 90.304688 L 148.19336 90.304688 L 148.19336 86.939453 L 142.52148 86.939453 L 142.52148 84.335938 L 147.55859 84.335938 L 147.55859 80.970703 L 142.52148 80.970703 L 142.52148 78.875 L 148.00391 78.875 L 148.00391 75.488281 L 138.75391 75.488281 z M 76.332031 78.939453 L 78.132812 78.939453 C 82.852987 78.939453 82.852986 86.855469 78.132812 86.855469 L 76.332031 86.855469 L 76.332031 78.939453 z M 94.556641 81.310547 L 96.271484 85.205078 L 92.884766 85.205078 L 94.556641 81.310547 z \\\"\\n       d=\\\"m 128.29687,76.787109 c -1.55459,0 -3.10467,0.531007 -4.23046,1.529297 -1.12455,0.997189 -1.88775,2.433606 -1.89844,4.580078 0.0107,2.14648 0.77319,3.583808 1.89648,4.578125 1.12454,0.995416 2.67299,1.520436 4.22461,1.511719 a 1.4661425,1.4661425 0 0 1 0.008,0 c 1.32115,0 2.64198,-0.354469 3.63086,-1.070312 0.60443,-0.437538 1.05377,-1.072472 1.40821,-1.837891 h -0.82422 c -0.87101,1.500106 -2.51083,2.392578 -4.21485,2.392578 a 1.4661425,1.4661425 0 0 1 -0.0137,0 c -3.06791,-0.02895 -5.13672,-2.748557 -5.13672,-5.574219 0,-1.518455 0.46037,-2.921744 1.37891,-3.957031 0.91854,-1.035286 2.29269,-1.636719 3.77148,-1.636719 1.63533,0 3.17498,0.813749 4.08008,2.179688 h 0.85547 c -0.35015,-0.668798 -0.79039,-1.22889 -1.36523,-1.636719 -0.99084,-0.702957 -2.30175,-1.058593 -3.57032,-1.058594 z m -54.285151,0.167969 v 11.882813 h 4.121093 c 2.036342,-0.01051 3.380579,-0.73914 4.322266,-1.822266 0.942719,-1.084313 1.451172,-2.591632 1.451172,-4.119141 0,-1.527509 -0.508453,-3.034827 -1.451172,-4.11914 -0.942719,-1.084313 -2.288034,-1.813318 -4.328125,-1.822266 z m 40.871091,0 V 82.75 a 1.4661425,1.4661425 0 0 1 -2.49218,1.048828 l -6.375,-6.232422 v 11.271485 h 0.98242 v -5.814454 a 1.4661425,1.4661425 0 0 1 2.49218,-1.048828 l 6.33399,6.191407 V 76.955078 Z m 25.33789,0 v 11.882813 h 6.50586 V 88.40625 h -4.20508 a 1.4661425,1.4661425 0 0 1 -1.46679,-1.466797 v -2.603516 a 1.4661425,1.4661425 0 0 1 1.46679,-1.466796 h 3.57032 V 82.4375 h -3.57032 a 1.4661425,1.4661425 0 0 1 -1.46679,-1.466797 V 78.875 a 1.4661425,1.4661425 0 0 1 1.46679,-1.466797 h 4.01563 V 76.955078 Z M 94.568359,77.033203 89.125,88.837891 h 0.730469 l 0.474609,-1.015625 a 1.4661425,1.4661425 0 0 1 1.328125,-0.845704 H 97.5 a 1.4661425,1.4661425 0 0 1 1.328125,0.847657 l 0.472656,1.013672 h 0.730469 z m -18.236328,0.439453 h 1.800781 c 1.589803,0 2.965812,0.738339 3.802735,1.791016 0.836922,1.052677 1.203125,2.353883 1.203125,3.634765 0,1.280883 -0.366203,2.580136 -1.203125,3.632813 -0.836923,1.052677 -2.212932,1.791016 -3.802735,1.791016 h -1.800781 a 1.4661425,1.4661425 0 0 1 -1.466797,-1.466797 v -7.916016 a 1.4661425,1.4661425 0 0 1 1.466797,-1.466797 z m 18.21875,2.373047 a 1.4661425,1.4661425 0 0 1 1.347656,0.875 l 1.714844,3.894531 a 1.4661425,1.4661425 0 0 1 -1.341797,2.056641 h -3.386718 a 1.4661425,1.4661425 0 0 1 -1.347657,-2.044922 l 1.671875,-3.894531 a 1.4661425,1.4661425 0 0 1 1.341797,-0.886719 z\\\"\\n       transform=\\\"translate(-5.369141,-12.337726)\\\"\\n       inkscape:label=\\\"path22\\\" />\\n  </g>\\n  <g\\n     inkscape:label=\\\"step4\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"g24\\\"\\n     transform=\\\"translate(-67.175781,-62.961102)\\\"\\n     style=\\\"display:inline\\\">\\n    <path\\n       id=\\\"path24\\\"\\n       style=\\\"font-size:21.1667px;font-family:'Intro Demo';-inkscape-font-specification:'Intro Demo, Normal';letter-spacing:0.529167px;word-spacing:0px;fill:#ffa6db;stroke:#0ff5ff;stroke-width:0;stroke-linecap:square\\\"\\n       sodipodi:type=\\\"inkscape:offset\\\"\\n       inkscape:radius=\\\"-1.7488033\\\"\\n       inkscape:original=\\\"M 93.753906 75.298828 L 87.085938 89.755859 L 87.085938 90.304688 L 90.789062 90.304688 L 91.658203 88.443359 L 97.5 88.443359 L 98.367188 90.304688 L 102.07227 90.304688 L 102.07227 89.755859 L 95.382812 75.298828 L 93.753906 75.298828 z M 128.29688 75.320312 C 124.52921 75.320312 120.72038 77.858809 120.69922 82.896484 C 120.72042 87.934159 124.5292 90.474292 128.29688 90.453125 C 131.45072 90.453125 134.77388 88.802334 135.32422 84.611328 L 131.59961 84.611328 C 131.19744 86.19883 129.90555 87.003906 128.29688 87.003906 C 126.05321 86.982736 124.61328 85.076654 124.61328 82.896484 C 124.61328 80.441147 126.07437 78.769531 128.29688 78.769531 C 129.88439 78.769531 131.00599 79.446383 131.53516 80.949219 L 135.26172 80.949219 C 134.69022 76.991046 131.36604 75.320313 128.29688 75.320312 z M 104.54883 75.425781 L 104.54883 90.304688 L 108.46484 90.304688 L 108.46484 83.023438 L 115.93555 90.326172 L 117.29102 90.326172 L 117.29102 75.488281 L 113.41602 75.488281 L 113.41602 82.75 L 105.92383 75.425781 L 104.54883 75.425781 z M 72.544922 75.488281 L 72.544922 90.304688 L 78.132812 90.304688 C 87.784828 90.262357 87.784828 75.530614 78.132812 75.488281 L 72.544922 75.488281 z M 138.75391 75.488281 L 138.75391 90.304688 L 148.19336 90.304688 L 148.19336 86.939453 L 142.52148 86.939453 L 142.52148 84.335938 L 147.55859 84.335938 L 147.55859 80.970703 L 142.52148 80.970703 L 142.52148 78.875 L 148.00391 78.875 L 148.00391 75.488281 L 138.75391 75.488281 z M 76.332031 78.939453 L 78.132812 78.939453 C 82.852987 78.939453 82.852986 86.855469 78.132812 86.855469 L 76.332031 86.855469 L 76.332031 78.939453 z M 94.556641 81.310547 L 96.271484 85.205078 L 92.884766 85.205078 L 94.556641 81.310547 z \\\"\\n       d=\\\"m 128.58594,77.109375 c 1.54444,0.09155 3.0339,0.814183 3.94922,2.091797 h 0.24609 c -0.29895,-0.444097 -0.65199,-0.822674 -1.07813,-1.125 -0.85931,-0.609649 -1.99353,-0.916256 -3.11718,-0.966797 z m -54.292971,0.126953 v 11.320313 h 1.992187 a 1.7489781,1.7489781 0 0 1 -1.701172,-1.701172 v -7.916016 a 1.7489781,1.7489781 0 0 1 1.703125,-1.703125 z m 40.871091,0 V 82.75 a 1.7489781,1.7489781 0 0 1 -2.9707,1.25 l -5.89648,-5.763672 v 10.320313 h 0.41992 v -5.533204 a 1.7489781,1.7489781 0 0 1 2.9707,-1.25 l 5.85547,5.72461 V 77.236328 Z m 25.33789,0 v 11.320313 h 1.88867 a 1.7489781,1.7489781 0 0 1 -1.61718,-1.617188 v -2.603516 a 1.7489781,1.7489781 0 0 1 1.68359,-1.683593 1.7489781,1.7489781 0 0 1 -1.68359,-1.681641 V 78.875 a 1.7489781,1.7489781 0 0 1 1.63867,-1.638672 z m -13.62109,0.07617 c -0.97462,0.218991 -1.90594,0.57549 -2.62695,1.214844 -1.0663,0.945537 -1.7938,2.295139 -1.80469,4.36914 0.0109,2.074011 0.73793,3.42269 1.80273,4.365235 0.88118,0.780002 2.06223,1.177484 3.2793,1.316406 -2.78417,-0.451592 -4.66602,-2.981876 -4.66602,-5.681641 0,-1.574552 0.47754,-3.049352 1.44922,-4.144531 0.66022,-0.744133 1.57975,-1.174848 2.56641,-1.439453 z m -47.398438,0.189453 c 1.07511,0.297164 2.048038,0.798822 2.673828,1.585938 0.884552,1.112585 1.265625,2.473453 1.265625,3.810546 0,1.337094 -0.381073,2.696009 -1.265625,3.808594 -0.614903,0.773422 -1.566155,1.269179 -2.617188,1.572266 1.132403,-0.265102 2.067327,-0.717925 2.703125,-1.449219 0.891833,-1.025783 1.38086,-2.467671 1.38086,-3.933594 0,-1.465922 -0.489027,-2.90781 -1.38086,-3.933593 -0.646074,-0.743114 -1.598813,-1.201312 -2.759765,-1.460938 z m 15.08789,0.203125 -1.224609,2.654297 a 1.7489781,1.7489781 0 0 1 2.460938,0.01953 z m -3.269531,7.085938 -1.736328,3.765625 h 0.111328 l 0.398438,-0.853516 a 1.7489781,1.7489781 0 0 1 1.583984,-1.007813 h 0.746094 a 1.7489781,1.7489781 0 0 1 -1.103516,-1.904296 z m 6.605469,0.123046 a 1.7489781,1.7489781 0 0 1 -0.884766,1.78125 H 97.5 a 1.7489781,1.7489781 0 0 1 1.585937,1.009766 l 0.396485,0.851563 h 0.109375 z m 34.77734,1.445313 c -0.63875,1.010775 -1.60646,1.752261 -2.71875,2.117187 0.66164,-0.168455 1.28351,-0.417442 1.79688,-0.789062 0.47664,-0.345033 0.87856,-0.775948 1.19531,-1.328125 z\\\"\\n       transform=\\\"translate(-5.369141,-12.337726)\\\"\\n       inkscape:label=\\\"path22\\\" />\\n  </g>\\n  <g\\n     inkscape:label=\\\"step5\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"g25\\\"\\n     transform=\\\"translate(-67.175781,-62.961102)\\\">\\n    <path\\n       id=\\\"path25\\\"\\n       style=\\\"font-size:21.1667px;font-family:'Intro Demo';-inkscape-font-specification:'Intro Demo, Normal';letter-spacing:0.529167px;word-spacing:0px;fill:#ffa6db;stroke:#0ff5ff;stroke-width:0;stroke-linecap:square\\\"\\n       sodipodi:type=\\\"inkscape:offset\\\"\\n       inkscape:radius=\\\"-2.0517991\\\"\\n       inkscape:original=\\\"M 93.753906 75.298828 L 87.085938 89.755859 L 87.085938 90.304688 L 90.789062 90.304688 L 91.658203 88.443359 L 97.5 88.443359 L 98.367188 90.304688 L 102.07227 90.304688 L 102.07227 89.755859 L 95.382812 75.298828 L 93.753906 75.298828 z M 128.29688 75.320312 C 124.52921 75.320312 120.72038 77.858809 120.69922 82.896484 C 120.72042 87.934159 124.5292 90.474292 128.29688 90.453125 C 131.45072 90.453125 134.77388 88.802334 135.32422 84.611328 L 131.59961 84.611328 C 131.19744 86.19883 129.90555 87.003906 128.29688 87.003906 C 126.05321 86.982736 124.61328 85.076654 124.61328 82.896484 C 124.61328 80.441147 126.07437 78.769531 128.29688 78.769531 C 129.88439 78.769531 131.00599 79.446383 131.53516 80.949219 L 135.26172 80.949219 C 134.69022 76.991046 131.36604 75.320313 128.29688 75.320312 z M 104.54883 75.425781 L 104.54883 90.304688 L 108.46484 90.304688 L 108.46484 83.023438 L 115.93555 90.326172 L 117.29102 90.326172 L 117.29102 75.488281 L 113.41602 75.488281 L 113.41602 82.75 L 105.92383 75.425781 L 104.54883 75.425781 z M 72.544922 75.488281 L 72.544922 90.304688 L 78.132812 90.304688 C 87.784828 90.262357 87.784828 75.530614 78.132812 75.488281 L 72.544922 75.488281 z M 138.75391 75.488281 L 138.75391 90.304688 L 148.19336 90.304688 L 148.19336 86.939453 L 142.52148 86.939453 L 142.52148 84.335938 L 147.55859 84.335938 L 147.55859 80.970703 L 142.52148 80.970703 L 142.52148 78.875 L 148.00391 78.875 L 148.00391 75.488281 L 138.75391 75.488281 z M 76.332031 78.939453 L 78.132812 78.939453 C 82.852987 78.939453 82.852986 86.855469 78.132812 86.855469 L 76.332031 86.855469 L 76.332031 78.939453 z M 94.556641 81.310547 L 96.271484 85.205078 L 92.884766 85.205078 L 94.556641 81.310547 z \\\"\\n       d=\\\"m 74.597656,77.541016 v 1.080078 a 2.0520042,2.0520042 0 0 1 1.080078,-1.080078 z m 66.208984,0 v 0.996093 a 2.0520042,2.0520042 0 0 1 0.99609,-0.996093 z m -46.236328,0.886718 -0.541015,1.175782 a 2.0520042,2.0520042 0 0 1 1.101562,0.03516 z m 12.031248,0.529297 v 3.78125 a 2.0520042,2.0520042 0 0 1 2.50586,-1.332031 z m 34.20508,2.351563 v 2.689453 a 2.0520042,2.0520042 0 0 1 1.3457,-1.345703 2.0520042,2.0520042 0 0 1 -1.3457,-1.34375 z m -25.56836,1.787109 a 2.0520042,2.0520042 0 0 1 -2.46289,1.271484 l 2.46289,2.408204 z m -24.105468,2.789063 -0.550781,1.191406 a 2.0520042,2.0520042 0 0 1 0.902344,-0.574219 2.0520042,2.0520042 0 0 1 -0.351563,-0.617187 z m 6.939454,0.113281 a 2.0520042,2.0520042 0 0 1 -0.34961,0.535156 2.0520042,2.0520042 0 0 1 0.847656,0.539063 z m -23.47461,1.175781 v 1.078125 h 1.078125 a 2.0520042,2.0520042 0 0 1 -1.078125,-1.078125 z m 66.208984,0.103516 v 0.974609 h 0.97461 a 2.0520042,2.0520042 0 0 1 -0.97461,-0.974609 z\\\"\\n       transform=\\\"translate(-5.369141,-12.337726)\\\"\\n       inkscape:label=\\\"path22\\\" />\\n  </g>\\n  <script\\n     id=\\\"JessyInk\\\"\\n     ns1:version=\\\"1.5.5\\\">// Copyright 2008, 2009 Hannes Hochreiner\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n//\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see http://www.gnu.org/licenses/.\\n\\n// Set onload event handler.\\nwindow.onload = jessyInkInit;\\n\\n// Creating a namespace dictionary. The standard Inkscape namespaces are taken from inkex.py.\\nvar NSS = new Object();\\nNSS['sodipodi']='http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd';\\nNSS['cc']='http://web.resource.org/cc/';\\nNSS['svg']='http://www.w3.org/2000/svg';\\nNSS['dc']='http://purl.org/dc/elements/1.1/';\\nNSS['rdf']='http://www.w3.org/1999/02/22-rdf-syntax-ns#';\\nNSS['inkscape']='http://www.inkscape.org/namespaces/inkscape';\\nNSS['xlink']='http://www.w3.org/1999/xlink';\\nNSS['xml']='http://www.w3.org/XML/1998/namespace';\\nNSS['jessyink']='https://launchpad.net/jessyink';\\n\\n// Keycodes.\\nvar LEFT_KEY = 37; // cursor left keycode\\nvar UP_KEY = 38; // cursor up keycode\\nvar RIGHT_KEY = 39; // cursor right keycode\\nvar DOWN_KEY = 40; // cursor down keycode\\nvar PAGE_UP_KEY = 33; // page up keycode\\nvar PAGE_DOWN_KEY = 34; // page down keycode\\nvar HOME_KEY = 36; // home keycode\\nvar END_KEY = 35; // end keycode\\nvar ENTER_KEY = 13; // next slide\\nvar SPACE_KEY = 32;\\nvar ESCAPE_KEY = 27;\\n\\n// Presentation modes.\\nvar SLIDE_MODE = 1;\\nvar INDEX_MODE = 2;\\nvar DRAWING_MODE = 3;\\n\\n// Mouse handler actions.\\nvar MOUSE_UP = 1;\\nvar MOUSE_DOWN = 2;\\nvar MOUSE_MOVE = 3;\\nvar MOUSE_WHEEL = 4;\\n\\n// Parameters.\\nvar ROOT_NODE = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;svg&quot;)[0];\\nvar HEIGHT = 0;\\nvar WIDTH = 0;\\nvar INDEX_COLUMNS_DEFAULT = 4;\\nvar INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;\\nvar INDEX_OFFSET = 0;\\nvar STATE_START = -1;\\nvar STATE_END = -2;\\nvar BACKGROUND_COLOR = null;\\nvar slides = new Array();\\n\\n// Initialisation.\\nvar currentMode = SLIDE_MODE;\\nvar masterSlide = null;\\nvar activeSlide = 0;\\nvar activeEffect = 0;\\nvar timeStep = 30; // 40 ms equal 25 frames per second.\\nvar lastFrameTime = null;\\nvar processingEffect = false;\\nvar transCounter = 0;\\nvar effectArray = 0;\\nvar defaultTransitionInDict = new Object();\\ndefaultTransitionInDict[&quot;name&quot;] = &quot;appear&quot;;\\nvar defaultTransitionOutDict = new Object();\\ndefaultTransitionOutDict[&quot;name&quot;] = &quot;appear&quot;;\\nvar jessyInkInitialised = false;\\n\\n// Initialise char and key code dictionaries.\\nvar charCodeDictionary = getDefaultCharCodeDictionary();\\nvar keyCodeDictionary = getDefaultKeyCodeDictionary();\\n\\n// Initialise mouse handler dictionary.\\nvar mouseHandlerDictionary = getDefaultMouseHandlerDictionary();\\n\\nvar progress_bar_visible = false;\\nvar timer_elapsed = 0;\\nvar timer_start = timer_elapsed;\\nvar timer_duration = 15; // 15 minutes\\n\\nvar history_counter = 0;\\nvar history_original_elements = new Array();\\nvar history_presentation_elements = new Array();\\n\\nvar mouse_original_path = null;\\nvar mouse_presentation_path = null;\\nvar mouse_last_x = -1;\\nvar mouse_last_y = -1;\\nvar mouse_min_dist_sqr = 3 * 3;\\nvar path_colour = &quot;red&quot;;\\nvar path_width_default = 3;\\nvar path_width = path_width_default;\\nvar path_paint_width = path_width;\\n\\nvar number_of_added_slides = 0;\\n\\n/** Initialisation function.\\n *  The whole presentation is set-up in this function.\\n */\\nfunction jessyInkInit()\\n{\\n    // Make sure we only execute this code once. Double execution can occur if the onload event handler is set\\n    // in the main svg tag as well (as was recommended in earlier versions). Executing this function twice does\\n    // not lead to any problems, but it takes more time.\\n    if (jessyInkInitialised)\\n        return;\\n\\n    // Making the presentation scalable.\\n    var VIEWBOX = ROOT_NODE.getAttribute(&quot;viewBox&quot;);\\n\\n    if (VIEWBOX)\\n    {\\n        WIDTH = ROOT_NODE.viewBox.animVal.width;\\n        HEIGHT = ROOT_NODE.viewBox.animVal.height;\\n    }\\n    else\\n    {\\n        HEIGHT = parseFloat(ROOT_NODE.getAttribute(&quot;height&quot;));\\n        WIDTH = parseFloat(ROOT_NODE.getAttribute(&quot;width&quot;));\\n        ROOT_NODE.setAttribute(&quot;viewBox&quot;, &quot;0 0 &quot; + WIDTH + &quot; &quot; + HEIGHT);\\n    }\\n\\n    ROOT_NODE.setAttribute(&quot;width&quot;, &quot;100%&quot;);\\n    ROOT_NODE.setAttribute(&quot;height&quot;, &quot;100%&quot;);\\n\\n    // Setting the background color.\\n    var namedViews = document.getElementsByTagNameNS(NSS[&quot;sodipodi&quot;], &quot;namedview&quot;);\\n\\n    for (var counter = 0; counter &lt; namedViews.length; counter++)\\n    {\\n        if (namedViews[counter].hasAttribute(&quot;id&quot;) &amp;&amp; namedViews[counter].hasAttribute(&quot;pagecolor&quot;))\\n        {\\n            if (namedViews[counter].getAttribute(&quot;id&quot;) == &quot;base&quot;)\\n            {\\n                BACKGROUND_COLOR = namedViews[counter].getAttribute(&quot;pagecolor&quot;);\\n                var newAttribute = &quot;background-color:&quot; + BACKGROUND_COLOR + &quot;;&quot;;\\n\\n                if (ROOT_NODE.hasAttribute(&quot;style&quot;))\\n                    newAttribute += ROOT_NODE.getAttribute(&quot;style&quot;);\\n\\n                ROOT_NODE.setAttribute(&quot;style&quot;, newAttribute);\\n            }\\n        }\\n    }\\n\\n    // Defining clip-path.\\n    var defsNodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);\\n\\n    if (defsNodes.length &gt; 0)\\n    {\\n        var existingClipPath = document.getElementById(&quot;jessyInkSlideClipPath&quot;);\\n\\n        if (!existingClipPath)\\n        {\\n            var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);\\n            var clipPath = document.createElementNS(NSS[&quot;svg&quot;], &quot;clipPath&quot;);\\n\\n            rectNode.setAttribute(&quot;x&quot;, 0);\\n            rectNode.setAttribute(&quot;y&quot;, 0);\\n            rectNode.setAttribute(&quot;width&quot;, WIDTH);\\n            rectNode.setAttribute(&quot;height&quot;, HEIGHT);\\n\\n            clipPath.setAttribute(&quot;id&quot;, &quot;jessyInkSlideClipPath&quot;);\\n            clipPath.setAttribute(&quot;clipPathUnits&quot;, &quot;userSpaceOnUse&quot;);\\n\\n            clipPath.appendChild(rectNode);\\n            defsNodes[0].appendChild(clipPath);\\n        }\\n    }\\n\\n    // Making a list of the slide and finding the master slide.\\n    var nodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n    var tempSlides = new Array();\\n    var existingJessyInkPresentationLayer = null;\\n\\n    for (var counter = 0; counter &lt; nodes.length; counter++)\\n    {\\n        if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) &amp;&amp; (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) == &quot;layer&quot;))\\n        {\\n            if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;masterSlide&quot;) == &quot;masterSlide&quot;)\\n                masterSlide = nodes[counter];\\n            else if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;) == &quot;presentationLayer&quot;)\\n                existingJessyInkPresentationLayer = nodes[counter];\\n            else\\n                tempSlides.push(nodes[counter].getAttribute(&quot;id&quot;));\\n        }\\n        else if (nodes[counter].getAttributeNS(NSS['jessyink'], 'element'))\\n        {\\n            handleElement(nodes[counter]);\\n        }\\n    }\\n\\n    // Hide master slide set default transitions.\\n    if (masterSlide)\\n    {\\n        masterSlide.style.display = &quot;none&quot;;\\n\\n        if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))\\n            defaultTransitionInDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));\\n\\n        if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))\\n            defaultTransitionOutDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));\\n    }\\n\\n    if (existingJessyInkPresentationLayer != null)\\n    {\\n        existingJessyInkPresentationLayer.parentNode.removeChild(existingJessyInkPresentationLayer);\\n    }\\n\\n    // Set start slide.\\n    var hashObj = new LocationHash(window.location.hash);\\n\\n    activeSlide = hashObj.slideNumber;\\n    activeEffect = hashObj.effectNumber;\\n\\n    if (activeSlide &lt; 0)\\n        activeSlide = 0;\\n    else if (activeSlide &gt;= tempSlides.length)\\n        activeSlide = tempSlides.length - 1;\\n\\n    var originalNode = document.getElementById(tempSlides[counter]);\\n\\n    var JessyInkPresentationLayer = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n    JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);\\n    JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;JessyInk Presentation Layer&quot;);\\n    JessyInkPresentationLayer.setAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;, &quot;presentationLayer&quot;);\\n    JessyInkPresentationLayer.setAttribute(&quot;id&quot;, &quot;jessyink_presentation_layer&quot;);\\n    JessyInkPresentationLayer.style.display = &quot;inherit&quot;;\\n    ROOT_NODE.appendChild(JessyInkPresentationLayer);\\n\\n    // Gathering all the information about the transitions and effects of the slides, set the background\\n    // from the master slide and substitute the auto-texts.\\n    for (var counter = 0; counter &lt; tempSlides.length; counter++)\\n    {\\n        var originalNode = document.getElementById(tempSlides[counter]);\\n        originalNode.style.display = &quot;none&quot;;\\n        var node = suffixNodeIds(originalNode.cloneNode(true), &quot;_&quot; + counter);\\n        JessyInkPresentationLayer.appendChild(node);\\n        slides[counter] = new Object();\\n        slides[counter][&quot;original_element&quot;] = originalNode;\\n        slides[counter][&quot;element&quot;] = node;\\n\\n        // Set build in transition.\\n        slides[counter][&quot;transitionIn&quot;] = new Object();\\n\\n        var dict;\\n\\n        if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))\\n            dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));\\n        else\\n            dict = defaultTransitionInDict;\\n\\n        slides[counter][&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];\\n        slides[counter][&quot;transitionIn&quot;][&quot;options&quot;] = new Object();\\n\\n        for (key in dict)\\n            if (key != &quot;name&quot;)\\n                slides[counter][&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];\\n\\n        // Set build out transition.\\n        slides[counter][&quot;transitionOut&quot;] = new Object();\\n\\n        if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))\\n            dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));\\n        else\\n            dict = defaultTransitionOutDict;\\n\\n        slides[counter][&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];\\n        slides[counter][&quot;transitionOut&quot;][&quot;options&quot;] = new Object();\\n\\n        for (key in dict)\\n            if (key != &quot;name&quot;)\\n                slides[counter][&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];\\n\\n        // Copy master slide content.\\n        if (masterSlide)\\n        {\\n            var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + counter);\\n            clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);\\n            clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);\\n            clonedNode.style.display = &quot;inherit&quot;;\\n\\n            node.insertBefore(clonedNode, node.firstChild);\\n        }\\n\\n        // Setting clip path.\\n        node.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);\\n\\n        // Substitute auto texts.\\n        substituteAutoTexts(node, node.getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;), counter + 1, tempSlides.length);\\n\\n        node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);\\n        node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);\\n\\n        // Set effects.\\n        var tempEffects = new Array();\\n        var groups = new Object();\\n\\n        for (var IOCounter = 0; IOCounter &lt;= 1; IOCounter++)\\n        {\\n            var propName = &quot;&quot;;\\n            var dir = 0;\\n\\n            if (IOCounter == 0)\\n            {\\n                propName = &quot;effectIn&quot;;\\n                dir = 1;\\n            }\\n            else if (IOCounter == 1)\\n            {\\n                propName = &quot;effectOut&quot;;\\n                dir = -1;\\n            }\\n\\n            var effects = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], propName);\\n\\n            for (var effectCounter = 0; effectCounter &lt; effects.length; effectCounter++)\\n            {\\n                var element = document.getElementById(effects[effectCounter]);\\n                var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], propName));\\n\\n                // Put every element that has an effect associated with it, into its own group.\\n                // Unless of course, we already put it into its own group.\\n                if (!(groups[element.id]))\\n                {\\n                    var newGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n\\n                    element.parentNode.insertBefore(newGroup, element);\\n                    newGroup.appendChild(element.parentNode.removeChild(element));\\n                    groups[element.id] = newGroup;\\n                }\\n\\n                var effectDict = new Object();\\n\\n                effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];\\n                effectDict[&quot;dir&quot;] = dir;\\n                effectDict[&quot;element&quot;] = groups[element.id];\\n\\n                for (var option in dict)\\n                {\\n                    if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))\\n                    {\\n                        if (!effectDict[&quot;options&quot;])\\n                            effectDict[&quot;options&quot;] = new Object();\\n\\n                        effectDict[&quot;options&quot;][option] = dict[option];\\n                    }\\n                }\\n\\n                if (!tempEffects[dict[&quot;order&quot;]])\\n                    tempEffects[dict[&quot;order&quot;]] = new Array();\\n\\n                tempEffects[dict[&quot;order&quot;]][tempEffects[dict[&quot;order&quot;]].length] = effectDict;\\n            }\\n        }\\n\\n        // Make invisible, but keep in rendering tree to ensure that bounding box can be calculated.\\n        node.setAttribute(&quot;opacity&quot;,0);\\n        node.style.display = &quot;inherit&quot;;\\n\\n        // Create a transform group.\\n        var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n\\n        // Add content to transform group.\\n        while (node.firstChild)\\n            transformGroup.appendChild(node.firstChild);\\n\\n        // Transfer the transform attribute from the node to the transform group.\\n        if (node.getAttribute(&quot;transform&quot;))\\n        {\\n            transformGroup.setAttribute(&quot;transform&quot;, node.getAttribute(&quot;transform&quot;));\\n            node.removeAttribute(&quot;transform&quot;);\\n        }\\n\\n        // Create a view group.\\n        var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n\\n        viewGroup.appendChild(transformGroup);\\n        slides[counter][&quot;viewGroup&quot;] = node.appendChild(viewGroup);\\n\\n        // Insert background.\\n        if (BACKGROUND_COLOR != null)\\n        {\\n            var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);\\n\\n            rectNode.setAttribute(&quot;x&quot;, 0);\\n            rectNode.setAttribute(&quot;y&quot;, 0);\\n            rectNode.setAttribute(&quot;width&quot;, WIDTH);\\n            rectNode.setAttribute(&quot;height&quot;, HEIGHT);\\n            rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + counter);\\n            rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);\\n\\n            slides[counter][&quot;viewGroup&quot;].insertBefore(rectNode, slides[counter][&quot;viewGroup&quot;].firstChild);\\n        }\\n\\n        // Set views.\\n        var tempViews = new Array();\\n        var views = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], &quot;view&quot;);\\n        var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);\\n\\n        // Set initial view even if there are no other views.\\n        slides[counter][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());\\n        slides[counter].initialView = matrixOld.toAttribute();\\n\\n        for (var viewCounter = 0; viewCounter &lt; views.length; viewCounter++)\\n        {\\n            var element = document.getElementById(views[viewCounter]);\\n            var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;view&quot;));\\n\\n            if (dict[&quot;order&quot;] == 0)\\n            {\\n                matrixOld = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());\\n                slides[counter].initialView = matrixOld.toAttribute();\\n            }\\n            else\\n            {\\n                var effectDict = new Object();\\n\\n                effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];\\n                effectDict[&quot;dir&quot;] = 1;\\n                effectDict[&quot;element&quot;] = slides[counter][&quot;viewGroup&quot;];\\n                effectDict[&quot;order&quot;] = dict[&quot;order&quot;];\\n\\n                for (var option in dict)\\n                {\\n                    if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))\\n                    {\\n                        if (!effectDict[&quot;options&quot;])\\n                            effectDict[&quot;options&quot;] = new Object();\\n\\n                        effectDict[&quot;options&quot;][option] = dict[option];\\n                    }\\n                }\\n\\n                effectDict[&quot;options&quot;][&quot;matrixNew&quot;] = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());\\n\\n                tempViews[dict[&quot;order&quot;]] = effectDict;\\n            }\\n\\n            // Remove element.\\n            element.parentNode.removeChild(element);\\n        }\\n\\n        // Consolidate view array and append it to the effect array.\\n        if (tempViews.length &gt; 0)\\n        {\\n            for (var viewCounter = 0; viewCounter &lt; tempViews.length; viewCounter++)\\n            {\\n                if (tempViews[viewCounter])\\n                {\\n                    tempViews[viewCounter][&quot;options&quot;][&quot;matrixOld&quot;] = matrixOld;\\n                    matrixOld = tempViews[viewCounter][&quot;options&quot;][&quot;matrixNew&quot;];\\n\\n                    if (!tempEffects[tempViews[viewCounter][&quot;order&quot;]])\\n                        tempEffects[tempViews[viewCounter][&quot;order&quot;]] = new Array();\\n\\n                    tempEffects[tempViews[viewCounter][&quot;order&quot;]][tempEffects[tempViews[viewCounter][&quot;order&quot;]].length] = tempViews[viewCounter];\\n                }\\n            }\\n        }\\n\\n        // Set consolidated effect array.\\n        if (tempEffects.length &gt; 0)\\n        {\\n            slides[counter][&quot;effects&quot;] = new Array();\\n\\n            for (var effectCounter = 0; effectCounter &lt; tempEffects.length; effectCounter++)\\n            {\\n                if (tempEffects[effectCounter])\\n                    slides[counter][&quot;effects&quot;][slides[counter][&quot;effects&quot;].length] = tempEffects[effectCounter];\\n            }\\n        }\\n\\n        node.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);\\n\\n        // Set visibility for initial state.\\n        if (counter == activeSlide)\\n        {\\n            node.style.display = &quot;inherit&quot;;\\n            node.setAttribute(&quot;opacity&quot;,1);\\n        }\\n        else\\n        {\\n            node.style.display = &quot;none&quot;;\\n            node.setAttribute(&quot;opacity&quot;,0);\\n        }\\n    }\\n\\n    // Set key handler.\\n    var jessyInkObjects = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n\\n    for (var counter = 0; counter &lt; jessyInkObjects.length; counter++)\\n    {\\n        var elem = jessyInkObjects[counter];\\n\\n        if (elem.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;customKeyBindings&quot;))\\n        {\\n            if (elem.getCustomKeyBindings != undefined)\\n                keyCodeDictionary = elem.getCustomKeyBindings();\\n\\n            if (elem.getCustomCharBindings != undefined)\\n                charCodeDictionary = elem.getCustomCharBindings();\\n        }\\n    }\\n\\n    // Set mouse handler.\\n    var jessyInkMouseHandler = document.getElementsByTagNameNS(NSS[&quot;jessyink&quot;], &quot;mousehandler&quot;);\\n\\n    for (var counter = 0; counter &lt; jessyInkMouseHandler.length; counter++)\\n    {\\n        var elem = jessyInkMouseHandler[counter];\\n\\n        if (elem.getMouseHandler != undefined)\\n        {\\n            var tempDict = elem.getMouseHandler();\\n\\n            for (mode in tempDict)\\n            {\\n                if (!mouseHandlerDictionary[mode])\\n                    mouseHandlerDictionary[mode] = new Object();\\n\\n                for (handler in tempDict[mode])\\n                    mouseHandlerDictionary[mode][handler] = tempDict[mode][handler];\\n            }\\n        }\\n    }\\n\\n    // Check effect number.\\n    if ((activeEffect &lt; 0) || (!slides[activeSlide].effects))\\n    {\\n        activeEffect = 0;\\n    }\\n    else if (activeEffect &gt; slides[activeSlide].effects.length)\\n    {\\n        activeEffect = slides[activeSlide].effects.length;\\n    }\\n\\n    createProgressBar(JessyInkPresentationLayer);\\n    hideProgressBar();\\n    setProgressBarValue(activeSlide);\\n    setTimeIndicatorValue(0);\\n    setInterval(&quot;updateTimer()&quot;, 1000);\\n    setSlideToState(activeSlide, activeEffect);\\n    jessyInkInitialised = true;\\n}\\n\\n/** Function to substitute the auto-texts.\\n *\\n *  @param node the node\\n *  @param slideName name of the slide the node is on\\n *  @param slideNumber number of the slide the node is on\\n *  @param numberOfSlides number of slides in the presentation\\n */\\nfunction substituteAutoTexts(node, slideName, slideNumber, numberOfSlides)\\n{\\n    var texts = node.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;tspan&quot;);\\n\\n    for (var textCounter = 0; textCounter &lt; texts.length; textCounter++)\\n    {\\n        if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideNumber&quot;)\\n            texts[textCounter].firstChild.nodeValue = slideNumber;\\n        else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;numberOfSlides&quot;)\\n            texts[textCounter].firstChild.nodeValue = numberOfSlides;\\n        else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideTitle&quot;)\\n            texts[textCounter].firstChild.nodeValue = slideName;\\n    }\\n}\\n\\n/** Convenience function to get an element depending on whether it has a property with a particular name.\\n *    This function emulates some dearly missed XPath functionality.\\n *\\n *  @param node the node\\n *  @param namespace namespace of the attribute\\n *  @param name attribute name\\n */\\nfunction getElementsByPropertyNS(node, namespace, name)\\n{\\n    var elems = new Array();\\n\\n    if (node.getAttributeNS(namespace, name))\\n        elems.push(node.getAttribute(&quot;id&quot;));\\n\\n    for (var counter = 0; counter &lt; node.childNodes.length; counter++)\\n    {\\n        if (node.childNodes[counter].nodeType == 1)\\n            elems = elems.concat(getElementsByPropertyNS(node.childNodes[counter], namespace, name));\\n    }\\n\\n    return elems;\\n}\\n\\n/** Function to dispatch the next effect, if there is none left, change the slide.\\n *\\n *  @param dir direction of the change (1 = forwards, -1 = backwards)\\n */\\nfunction dispatchEffects(dir)\\n{\\n    if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))\\n    {\\n        processingEffect = true;\\n\\n        if (dir == 1)\\n        {\\n            effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];\\n            activeEffect += dir;\\n        }\\n        else if (dir == -1)\\n        {\\n            activeEffect += dir;\\n            effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];\\n        }\\n\\n        transCounter = 0;\\n        startTime = (new Date()).getTime();\\n        lastFrameTime = null;\\n        effect(dir);\\n    }\\n    else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))\\n    {\\n        changeSlide(dir);\\n    }\\n}\\n\\n/** Function to skip effects and directly either put the slide into start or end state or change slides.\\n *\\n *  @param dir direction of the change (1 = forwards, -1 = backwards)\\n */\\nfunction skipEffects(dir)\\n{\\n    if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))\\n    {\\n        processingEffect = true;\\n\\n        if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == 1))\\n            activeEffect = slides[activeSlide][&quot;effects&quot;].length;\\n        else\\n            activeEffect = 0;\\n\\n        if (dir == 1)\\n            setSlideToState(activeSlide, STATE_END);\\n        else\\n            setSlideToState(activeSlide, STATE_START);\\n\\n        processingEffect = false;\\n    }\\n    else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))\\n    {\\n        changeSlide(dir);\\n    }\\n}\\n\\n/** Function to change between slides.\\n *\\n *  @param dir direction (1 = forwards, -1 = backwards)\\n */\\nfunction changeSlide(dir)\\n{\\n    processingEffect = true;\\n    effectArray = new Array();\\n\\n    effectArray[0] = new Object();\\n    if (dir == 1)\\n    {\\n        effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];\\n        effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];\\n        effectArray[0][&quot;dir&quot;] = -1;\\n    }\\n    else if (dir == -1)\\n    {\\n        effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];\\n        effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];\\n        effectArray[0][&quot;dir&quot;] = 1;\\n    }\\n    effectArray[0][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];\\n\\n    activeSlide += dir;\\n    setProgressBarValue(activeSlide);\\n\\n    effectArray[1] = new Object();\\n\\n    if (dir == 1)\\n    {\\n        effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];\\n        effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];\\n        effectArray[1][&quot;dir&quot;] = 1;\\n    }\\n    else if (dir == -1)\\n    {\\n        effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];\\n        effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];\\n        effectArray[1][&quot;dir&quot;] = -1;\\n    }\\n\\n    effectArray[1][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];\\n\\n    if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == -1))\\n        activeEffect = slides[activeSlide][&quot;effects&quot;].length;\\n    else\\n        activeEffect = 0;\\n\\n    if (dir == -1)\\n        setSlideToState(activeSlide, STATE_END);\\n    else\\n        setSlideToState(activeSlide, STATE_START);\\n\\n    transCounter = 0;\\n    startTime = (new Date()).getTime();\\n    lastFrameTime = null;\\n    effect(dir);\\n}\\n\\n/** Function to toggle between index and slide mode.\\n*/\\nfunction toggleSlideIndex()\\n{\\n    var suspendHandle = ROOT_NODE.suspendRedraw(500);\\n\\n    if (currentMode == SLIDE_MODE)\\n    {\\n        hideProgressBar();\\n        INDEX_OFFSET = -1;\\n        indexSetPageSlide(activeSlide);\\n        currentMode = INDEX_MODE;\\n    }\\n    else if (currentMode == INDEX_MODE)\\n    {\\n        for (var counter = 0; counter &lt; slides.length; counter++)\\n        {\\n            slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(1)&quot;);\\n\\n            if (counter == activeSlide)\\n            {\\n                slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;\\n                slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);\\n                activeEffect = 0;\\n            }\\n            else\\n            {\\n                slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);\\n                slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;\\n            }\\n        }\\n        currentMode = SLIDE_MODE;\\n        setSlideToState(activeSlide, STATE_START);\\n        setProgressBarValue(activeSlide);\\n\\n        if (progress_bar_visible)\\n        {\\n            showProgressBar();\\n        }\\n    }\\n\\n    ROOT_NODE.unsuspendRedraw(suspendHandle);\\n    ROOT_NODE.forceRedraw();\\n}\\n\\n/** Function to run an effect.\\n *\\n *  @param dir direction in which to play the effect (1 = forwards, -1 = backwards)\\n */\\nfunction effect(dir)\\n{\\n    var done = true;\\n\\n    var suspendHandle = ROOT_NODE.suspendRedraw(200);\\n\\n    for (var counter = 0; counter &lt; effectArray.length; counter++)\\n    {\\n        if (effectArray[counter][&quot;effect&quot;] == &quot;fade&quot;)\\n            done &amp;= fade(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);\\n        else if (effectArray[counter][&quot;effect&quot;] == &quot;appear&quot;)\\n            done &amp;= appear(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);\\n        else if (effectArray[counter][&quot;effect&quot;] == &quot;pop&quot;)\\n            done &amp;= pop(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);\\n        else if (effectArray[counter][&quot;effect&quot;] == &quot;view&quot;)\\n            done &amp;= view(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);\\n    }\\n\\n    ROOT_NODE.unsuspendRedraw(suspendHandle);\\n    ROOT_NODE.forceRedraw();\\n\\n    if (!done)\\n    {\\n        var currentTime = (new Date()).getTime();\\n        var timeDiff = 1;\\n\\n        transCounter = currentTime - startTime;\\n\\n        if (lastFrameTime != null)\\n        {\\n            timeDiff = timeStep - (currentTime - lastFrameTime);\\n\\n            if (timeDiff &lt;= 0)\\n                timeDiff = 1;\\n        }\\n\\n        lastFrameTime = currentTime;\\n\\n        window.setTimeout(&quot;effect(&quot; + dir + &quot;)&quot;, timeDiff);\\n    }\\n    else\\n    {\\n        window.location.hash = (activeSlide + 1) + '_' + activeEffect;\\n        processingEffect = false;\\n    }\\n}\\n\\n/** Function to display the index sheet.\\n *\\n *  @param offsetNumber offset number\\n */\\nfunction displayIndex(offsetNumber)\\n{\\n    var offsetX = 0;\\n    var offsetY = 0;\\n\\n    if (offsetNumber &lt; 0)\\n        offsetNumber = 0;\\n    else if (offsetNumber &gt;= slides.length)\\n        offsetNumber = slides.length - 1;\\n\\n    for (var counter = 0; counter &lt; slides.length; counter++)\\n    {\\n        if ((counter &lt; offsetNumber) || (counter &gt; offsetNumber + INDEX_COLUMNS * INDEX_COLUMNS - 1))\\n        {\\n            slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);\\n            slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;\\n        }\\n        else\\n        {\\n            offsetX = ((counter - offsetNumber) % INDEX_COLUMNS) * WIDTH;\\n            offsetY = Math.floor((counter - offsetNumber) / INDEX_COLUMNS) * HEIGHT;\\n\\n            slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(&quot;+1/INDEX_COLUMNS+&quot;) translate(&quot;+offsetX+&quot;,&quot;+offsetY+&quot;)&quot;);\\n            slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;\\n            slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);\\n        }\\n\\n        setSlideToState(counter, STATE_END);\\n    }\\n\\n    //do we need to save the current offset?\\n    if (INDEX_OFFSET != offsetNumber)\\n        INDEX_OFFSET = offsetNumber;\\n}\\n\\n/** Function to set the active slide in the slide view.\\n *\\n *  @param nbr index of the active slide\\n */\\nfunction slideSetActiveSlide(nbr)\\n{\\n    if (nbr &gt;= slides.length)\\n        nbr = slides.length - 1;\\n    else if (nbr &lt; 0)\\n        nbr = 0;\\n\\n    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);\\n    slides[activeSlide][&quot;element&quot;].style.display = &quot;none&quot;;\\n\\n    activeSlide = parseInt(nbr);\\n\\n    setSlideToState(activeSlide, STATE_START);\\n    slides[activeSlide][&quot;element&quot;].style.display = &quot;inherit&quot;;\\n    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);\\n\\n    activeEffect = 0;\\n    setProgressBarValue(nbr);\\n}\\n\\n/** Function to set the active slide in the index view.\\n *\\n *  @param nbr index of the active slide\\n */\\nfunction indexSetActiveSlide(nbr)\\n{\\n    if (nbr &gt;= slides.length)\\n        nbr = slides.length - 1;\\n    else if (nbr &lt; 0)\\n        nbr = 0;\\n\\n    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);\\n\\n    activeSlide = parseInt(nbr);\\n    window.location.hash = (activeSlide + 1) + '_0';\\n\\n    slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);\\n}\\n\\n/** Function to set the page and active slide in index view.\\n *\\n *  @param nbr index of the active slide\\n *\\n *  NOTE: To force a redraw,\\n *  set INDEX_OFFSET to -1 before calling indexSetPageSlide().\\n *\\n *  This is necessary for zooming (otherwise the index might not\\n *  get redrawn) and when switching to index mode.\\n *\\n *  INDEX_OFFSET = -1\\n *  indexSetPageSlide(activeSlide);\\n */\\nfunction indexSetPageSlide(nbr)\\n{\\n    if (nbr &gt;= slides.length)\\n        nbr = slides.length - 1;\\n    else if (nbr &lt; 0)\\n        nbr = 0;\\n\\n    //calculate the offset\\n    var offset = nbr - nbr % (INDEX_COLUMNS * INDEX_COLUMNS);\\n\\n    if (offset &lt; 0)\\n        offset = 0;\\n\\n    //if different from kept offset, then record and change the page\\n    if (offset != INDEX_OFFSET)\\n    {\\n        INDEX_OFFSET = offset;\\n        displayIndex(INDEX_OFFSET);\\n    }\\n\\n    //set the active slide\\n    indexSetActiveSlide(nbr);\\n}\\n\\n/** Event handler for key press.\\n *\\n *  @param e the event\\n */\\nfunction keydown(e)\\n{\\n    if (!e)\\n        e = window.event;\\n\\n    code = e.keyCode || e.charCode;\\n\\n    if (!processingEffect &amp;&amp; keyCodeDictionary[currentMode] &amp;&amp; keyCodeDictionary[currentMode][code])\\n        return keyCodeDictionary[currentMode][code]();\\n    else\\n        document.onkeypress = keypress;\\n}\\n// Set event handler for key down.\\ndocument.onkeydown = keydown;\\n\\n/** Event handler for key press.\\n *\\n *  @param e the event\\n */\\nfunction keypress(e)\\n{\\n    document.onkeypress = null;\\n\\n    if (!e)\\n        e = window.event;\\n\\n    str = String.fromCharCode(e.keyCode || e.charCode);\\n\\n    if (!processingEffect &amp;&amp; charCodeDictionary[currentMode] &amp;&amp; charCodeDictionary[currentMode][str])\\n        return charCodeDictionary[currentMode][str]();\\n}\\n\\n/** Function to supply the default char code dictionary.\\n *\\n * @returns default char code dictionary\\n */\\nfunction getDefaultCharCodeDictionary()\\n{\\n    var charCodeDict = new Object();\\n\\n    charCodeDict[SLIDE_MODE] = new Object();\\n    charCodeDict[INDEX_MODE] = new Object();\\n    charCodeDict[DRAWING_MODE] = new Object();\\n\\n    charCodeDict[SLIDE_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };\\n    charCodeDict[SLIDE_MODE][&quot;d&quot;] = function () { return slideSwitchToDrawingMode(); };\\n    charCodeDict[SLIDE_MODE][&quot;D&quot;] = function () { return slideQueryDuration(); };\\n    charCodeDict[SLIDE_MODE][&quot;n&quot;] = function () { return slideAddSlide(activeSlide); };\\n    charCodeDict[SLIDE_MODE][&quot;p&quot;] = function () { return slideToggleProgressBarVisibility(); };\\n    charCodeDict[SLIDE_MODE][&quot;t&quot;] = function () { return slideResetTimer(); };\\n    charCodeDict[SLIDE_MODE][&quot;e&quot;] = function () { return slideUpdateExportLayer(); };\\n\\n    charCodeDict[DRAWING_MODE][&quot;d&quot;] = function () { return drawingSwitchToSlideMode(); };\\n    charCodeDict[DRAWING_MODE][&quot;0&quot;] = function () { return drawingResetPathWidth(); };\\n    charCodeDict[DRAWING_MODE][&quot;1&quot;] = function () { return drawingSetPathWidth(1.0); };\\n    charCodeDict[DRAWING_MODE][&quot;3&quot;] = function () { return drawingSetPathWidth(3.0); };\\n    charCodeDict[DRAWING_MODE][&quot;5&quot;] = function () { return drawingSetPathWidth(5.0); };\\n    charCodeDict[DRAWING_MODE][&quot;7&quot;] = function () { return drawingSetPathWidth(7.0); };\\n    charCodeDict[DRAWING_MODE][&quot;9&quot;] = function () { return drawingSetPathWidth(9.0); };\\n    charCodeDict[DRAWING_MODE][&quot;b&quot;] = function () { return drawingSetPathColour(&quot;blue&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;c&quot;] = function () { return drawingSetPathColour(&quot;cyan&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;g&quot;] = function () { return drawingSetPathColour(&quot;green&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;k&quot;] = function () { return drawingSetPathColour(&quot;black&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;m&quot;] = function () { return drawingSetPathColour(&quot;magenta&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;o&quot;] = function () { return drawingSetPathColour(&quot;orange&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;r&quot;] = function () { return drawingSetPathColour(&quot;red&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;w&quot;] = function () { return drawingSetPathColour(&quot;white&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;y&quot;] = function () { return drawingSetPathColour(&quot;yellow&quot;); };\\n    charCodeDict[DRAWING_MODE][&quot;z&quot;] = function () { return drawingUndo(); };\\n\\n    charCodeDict[INDEX_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };\\n    charCodeDict[INDEX_MODE][&quot;-&quot;] = function () { return indexDecreaseNumberOfColumns(); };\\n    charCodeDict[INDEX_MODE][&quot;=&quot;] = function () { return indexIncreaseNumberOfColumns(); };\\n    charCodeDict[INDEX_MODE][&quot;+&quot;] = function () { return indexIncreaseNumberOfColumns(); };\\n    charCodeDict[INDEX_MODE][&quot;0&quot;] = function () { return indexResetNumberOfColumns(); };\\n\\n    return charCodeDict;\\n}\\n\\n/** Function to supply the default key code dictionary.\\n *\\n * @returns default key code dictionary\\n */\\nfunction getDefaultKeyCodeDictionary()\\n{\\n    var keyCodeDict = new Object();\\n\\n    keyCodeDict[SLIDE_MODE] = new Object();\\n    keyCodeDict[INDEX_MODE] = new Object();\\n    keyCodeDict[DRAWING_MODE] = new Object();\\n\\n    keyCodeDict[SLIDE_MODE][LEFT_KEY] = function() { return dispatchEffects(-1); };\\n    keyCodeDict[SLIDE_MODE][RIGHT_KEY] = function() { return dispatchEffects(1); };\\n    keyCodeDict[SLIDE_MODE][UP_KEY] = function() { return skipEffects(-1); };\\n    keyCodeDict[SLIDE_MODE][DOWN_KEY] = function() { return skipEffects(1); };\\n    keyCodeDict[SLIDE_MODE][PAGE_UP_KEY] = function() { return dispatchEffects(-1); };\\n    keyCodeDict[SLIDE_MODE][PAGE_DOWN_KEY] = function() { return dispatchEffects(1); };\\n    keyCodeDict[SLIDE_MODE][HOME_KEY] = function() { return slideSetActiveSlide(0); };\\n    keyCodeDict[SLIDE_MODE][END_KEY] = function() { return slideSetActiveSlide(slides.length - 1); };\\n    keyCodeDict[SLIDE_MODE][SPACE_KEY] = function() { return dispatchEffects(1); };\\n\\n    keyCodeDict[INDEX_MODE][LEFT_KEY] = function() { return indexSetPageSlide(activeSlide - 1); };\\n    keyCodeDict[INDEX_MODE][RIGHT_KEY] = function() { return indexSetPageSlide(activeSlide + 1); };\\n    keyCodeDict[INDEX_MODE][UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS); };\\n    keyCodeDict[INDEX_MODE][DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS); };\\n    keyCodeDict[INDEX_MODE][PAGE_UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS); };\\n    keyCodeDict[INDEX_MODE][PAGE_DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS); };\\n    keyCodeDict[INDEX_MODE][HOME_KEY] = function() { return indexSetPageSlide(0); };\\n    keyCodeDict[INDEX_MODE][END_KEY] = function() { return indexSetPageSlide(slides.length - 1); };\\n    keyCodeDict[INDEX_MODE][ENTER_KEY] = function() { return toggleSlideIndex(); };\\n\\n    keyCodeDict[DRAWING_MODE][ESCAPE_KEY] = function () { return drawingSwitchToSlideMode(); };\\n\\n    return keyCodeDict;\\n}\\n\\n/** Function to handle all mouse events.\\n *\\n *    @param    evnt    event\\n *    @param    action    type of event (e.g. mouse up, mouse wheel)\\n */\\nfunction mouseHandlerDispatch(evnt, action)\\n{\\n    if (!evnt)\\n        evnt = window.event;\\n\\n    var retVal = true;\\n\\n    if (!processingEffect &amp;&amp; mouseHandlerDictionary[currentMode] &amp;&amp; mouseHandlerDictionary[currentMode][action])\\n    {\\n        var subRetVal = mouseHandlerDictionary[currentMode][action](evnt);\\n\\n        if (subRetVal != null &amp;&amp; subRetVal != undefined)\\n            retVal = subRetVal;\\n    }\\n\\n    if (evnt.preventDefault &amp;&amp; !retVal)\\n        evnt.preventDefault();\\n\\n    evnt.returnValue = retVal;\\n\\n    return retVal;\\n}\\n\\n// Set mouse event handler.\\ndocument.onmousedown = function(e) { return mouseHandlerDispatch(e, MOUSE_DOWN); };\\ndocument.onmouseup = function(e) { return mouseHandlerDispatch(e, MOUSE_UP); };\\ndocument.onmousemove = function(e) { return mouseHandlerDispatch(e, MOUSE_MOVE); };\\n\\n// Moz\\nif (window.addEventListener)\\n{\\n    window.addEventListener('DOMMouseScroll', function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); }, false);\\n}\\n\\n// Opera Safari OK - may not work in IE\\nwindow.onmousewheel = function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); };\\n\\n/** Function to supply the default mouse handler dictionary.\\n *\\n * @returns default mouse handler dictionary\\n */\\nfunction getDefaultMouseHandlerDictionary()\\n{\\n    var mouseHandlerDict = new Object();\\n\\n    mouseHandlerDict[SLIDE_MODE] = new Object();\\n    mouseHandlerDict[INDEX_MODE] = new Object();\\n    mouseHandlerDict[DRAWING_MODE] = new Object();\\n\\n    mouseHandlerDict[SLIDE_MODE][MOUSE_DOWN] = function(evnt) { return dispatchEffects(1); };\\n    mouseHandlerDict[SLIDE_MODE][MOUSE_WHEEL] = function(evnt) { return slideMousewheel(evnt); };\\n\\n    mouseHandlerDict[INDEX_MODE][MOUSE_DOWN] = function(evnt) { return toggleSlideIndex(); };\\n\\n    mouseHandlerDict[DRAWING_MODE][MOUSE_DOWN] = function(evnt) { return drawingMousedown(evnt); };\\n    mouseHandlerDict[DRAWING_MODE][MOUSE_UP] = function(evnt) { return drawingMouseup(evnt); };\\n    mouseHandlerDict[DRAWING_MODE][MOUSE_MOVE] = function(evnt) { return drawingMousemove(evnt); };\\n\\n    return mouseHandlerDict;\\n}\\n\\n/** Function to switch from slide mode to drawing mode.\\n*/\\nfunction slideSwitchToDrawingMode()\\n{\\n    currentMode = DRAWING_MODE;\\n\\n    var tempDict;\\n\\n    if (ROOT_NODE.hasAttribute(&quot;style&quot;))\\n        tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));\\n    else\\n        tempDict = new Object();\\n\\n    tempDict[&quot;cursor&quot;] = &quot;crosshair&quot;;\\n    ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));\\n}\\n\\n/** Function to switch from drawing mode to slide mode.\\n*/\\nfunction drawingSwitchToSlideMode()\\n{\\n    currentMode = SLIDE_MODE;\\n\\n    var tempDict;\\n\\n    if (ROOT_NODE.hasAttribute(&quot;style&quot;))\\n        tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));\\n    else\\n        tempDict = new Object();\\n\\n    tempDict[&quot;cursor&quot;] = &quot;auto&quot;;\\n    ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));\\n}\\n\\n/** Function to decrease the number of columns in index mode.\\n*/\\nfunction indexDecreaseNumberOfColumns()\\n{\\n    if (INDEX_COLUMNS &gt;= 3)\\n    {\\n        INDEX_COLUMNS -= 1;\\n        INDEX_OFFSET = -1\\n            indexSetPageSlide(activeSlide);\\n    }\\n}\\n\\n/** Function to increase the number of columns in index mode.\\n*/\\nfunction indexIncreaseNumberOfColumns()\\n{\\n    if (INDEX_COLUMNS &lt; 7)\\n    {\\n        INDEX_COLUMNS += 1;\\n        INDEX_OFFSET = -1\\n            indexSetPageSlide(activeSlide);\\n    }\\n}\\n\\n/** Function to reset the number of columns in index mode.\\n*/\\nfunction indexResetNumberOfColumns()\\n{\\n    if (INDEX_COLUMNS != INDEX_COLUMNS_DEFAULT)\\n    {\\n        INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;\\n        INDEX_OFFSET = -1\\n            indexSetPageSlide(activeSlide);\\n    }\\n}\\n\\n/** Function to reset path width in drawing mode.\\n*/\\nfunction drawingResetPathWidth()\\n{\\n    path_width = path_width_default;\\n    set_path_paint_width();\\n}\\n\\n/** Function to set path width in drawing mode.\\n *\\n * @param width new path width\\n */\\nfunction drawingSetPathWidth(width)\\n{\\n    path_width = width;\\n    set_path_paint_width();\\n}\\n\\n/** Function to set path colour in drawing mode.\\n *\\n * @param colour new path colour\\n */\\nfunction drawingSetPathColour(colour)\\n{\\n    path_colour = colour;\\n}\\n\\n/** Function to query the duration of the presentation from the user in slide mode.\\n*/\\nfunction slideQueryDuration()\\n{\\n    var new_duration = prompt(&quot;Length of presentation in minutes?&quot;, timer_duration);\\n\\n    if ((new_duration != null) &amp;&amp; (new_duration != ''))\\n    {\\n        timer_duration = new_duration;\\n    }\\n\\n    updateTimer();\\n}\\n\\n/** Function to add new slide in slide mode.\\n *\\n * @param afterSlide after which slide to insert the new one\\n */\\nfunction slideAddSlide(afterSlide)\\n{\\n    addSlide(afterSlide);\\n    slideSetActiveSlide(afterSlide + 1);\\n    updateTimer();\\n}\\n\\n/** Function to toggle the visibility of the progress bar in slide mode.\\n*/\\nfunction slideToggleProgressBarVisibility()\\n{\\n    if (progress_bar_visible)\\n    {\\n        progress_bar_visible = false;\\n        hideProgressBar();\\n    }\\n    else\\n    {\\n        progress_bar_visible = true;\\n        showProgressBar();\\n    }\\n}\\n\\n/** Function to reset the timer in slide mode.\\n*/\\nfunction slideResetTimer()\\n{\\n    timer_start = timer_elapsed;\\n    updateTimer();\\n}\\n\\n/** Convenience function to pad a string with zero in front up to a certain length.\\n */\\nfunction padString(str, len)\\n{\\n    var outStr = str;\\n\\n    while (outStr.length &lt; len)\\n    {\\n        outStr = '0' + outStr;\\n    }\\n\\n    return outStr;\\n}\\n\\n/** Function to update the export layer.\\n */\\nfunction slideUpdateExportLayer()\\n{\\n    // Suspend redraw since we are going to mess with the slides.\\n    var suspendHandle = ROOT_NODE.suspendRedraw(2000);\\n\\n    var tmpActiveSlide = activeSlide;\\n    var tmpActiveEffect = activeEffect;\\n    var exportedLayers = new Array();\\n\\n    for (var counterSlides = 0; counterSlides &lt; slides.length; counterSlides++)\\n    {\\n        var exportNode;\\n\\n        setSlideToState(counterSlides, STATE_START);\\n\\n        var maxEffect = 0;\\n\\n        if (slides[counterSlides].effects)\\n        {\\n            maxEffect = slides[counterSlides].effects.length;\\n        }\\n\\n        exportNode = slides[counterSlides].element.cloneNode(true);\\n        exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);\\n        exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString(&quot;0&quot;, maxEffect.toString().length));\\n\\n        exportedLayers.push(exportNode);\\n\\n        if (slides[counterSlides][&quot;effects&quot;])\\n        {\\n            for (var counter = 0; counter &lt; slides[counterSlides][&quot;effects&quot;].length; counter++)\\n            {\\n                for (var subCounter = 0; subCounter &lt; slides[counterSlides][&quot;effects&quot;][counter].length; subCounter++)\\n                {\\n                    var effect = slides[counterSlides][&quot;effects&quot;][counter][subCounter];\\n                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)\\n                        fade(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)\\n                        appear(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)\\n                        pop(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)\\n                        view(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                }\\n\\n                var layerName = &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString((counter + 1).toString(), maxEffect.toString().length);\\n                exportNode = slides[counterSlides].element.cloneNode(true);\\n                exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);\\n                exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, layerName);\\n                exportNode.setAttribute(&quot;id&quot;, layerName);\\n\\n                exportedLayers.push(exportNode);\\n            }\\n        }\\n    }\\n\\n    activeSlide = tmpActiveSlide;\\n    activeEffect = tmpActiveEffect;\\n    setSlideToState(activeSlide, activeEffect);\\n\\n    // Copy image.\\n    var newDoc = document.documentElement.cloneNode(true);\\n\\n    // Delete viewbox form new imag and set width and height.\\n    newDoc.removeAttribute('viewbox');\\n    newDoc.setAttribute('width', WIDTH);\\n    newDoc.setAttribute('height', HEIGHT);\\n\\n    // Delete all layers and script elements.\\n    var nodesToBeRemoved = new Array();\\n\\n    for (var childCounter = 0; childCounter &lt;  newDoc.childNodes.length; childCounter++)\\n    {\\n        var child = newDoc.childNodes[childCounter];\\n\\n        if (child.nodeType == 1)\\n        {\\n            if ((child.nodeName.toUpperCase() == 'G') || (child.nodeName.toUpperCase() == 'SCRIPT'))\\n            {\\n                nodesToBeRemoved.push(child);\\n            }\\n        }\\n    }\\n\\n    for (var ndCounter = 0; ndCounter &lt; nodesToBeRemoved.length; ndCounter++)\\n    {\\n        var nd = nodesToBeRemoved[ndCounter];\\n\\n        // Before removing the node, check whether it contains any definitions.\\n        var defs = nd.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);\\n\\n        for (var defsCounter = 0; defsCounter &lt; defs.length; defsCounter++)\\n        {\\n            if (defs[defsCounter].id)\\n            {\\n                newDoc.appendChild(defs[defsCounter].cloneNode(true));\\n            }\\n        }\\n\\n        // Remove node.\\n        nd.parentNode.removeChild(nd);\\n    }\\n\\n    // Set current layer.\\n    if (exportedLayers[0])\\n    {\\n        var namedView;\\n\\n        for (var nodeCounter = 0; nodeCounter &lt; newDoc.childNodes.length; nodeCounter++)\\n        {\\n            if ((newDoc.childNodes[nodeCounter].nodeType == 1) &amp;&amp; (newDoc.childNodes[nodeCounter].getAttribute('id') == 'base'))\\n            {\\n                namedView = newDoc.childNodes[nodeCounter];\\n            }\\n        }\\n\\n        if (namedView)\\n        {\\n            namedView.setAttributeNS(NSS['inkscape'], 'current-layer', exportedLayers[0].getAttributeNS(NSS['inkscape'], 'label'));\\n        }\\n    }\\n\\n    // Add exported layers.\\n    while (exportedLayers.length &gt; 0)\\n    {\\n        var nd = exportedLayers.pop();\\n\\n        nd.setAttribute(&quot;opacity&quot;,1);\\n        nd.style.display = &quot;inherit&quot;;\\n\\n        newDoc.appendChild(nd);\\n    }\\n\\n    // Serialise the new document.\\n  window.location = 'data:application/svg+xml;base64;charset=utf-8,' + window.btoa(unescape(encodeURIComponent((new XMLSerializer()).serializeToString(newDoc))));\\n\\n    // Unsuspend redraw.\\n    ROOT_NODE.unsuspendRedraw(suspendHandle);\\n    ROOT_NODE.forceRedraw();\\n}\\n\\n/** Function to undo last drawing operation.\\n*/\\nfunction drawingUndo()\\n{\\n    mouse_presentation_path = null;\\n    mouse_original_path = null;\\n\\n    if (history_presentation_elements.length &gt; 0)\\n    {\\n        var p = history_presentation_elements.pop();\\n        var parent = p.parentNode.removeChild(p);\\n\\n        p = history_original_elements.pop();\\n        parent = p.parentNode.removeChild(p);\\n    }\\n}\\n\\n/** Event handler for mouse down in drawing mode.\\n *\\n *  @param e the event\\n */\\nfunction drawingMousedown(e)\\n{\\n    var value = 0;\\n\\n    if (e.button)\\n        value = e.button;\\n    else if (e.which)\\n        value = e.which;\\n\\n    if (value == 1)\\n    {\\n        history_counter++;\\n\\n        var p = calcCoord(e);\\n\\n        mouse_last_x = e.clientX;\\n        mouse_last_y = e.clientY;\\n        mouse_original_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);\\n        mouse_original_path.setAttribute(&quot;stroke&quot;, path_colour);\\n        mouse_original_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);\\n        mouse_original_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);\\n        mouse_original_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date());\\n        mouse_original_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);\\n        slides[activeSlide][&quot;original_element&quot;].appendChild(mouse_original_path);\\n        history_original_elements.push(mouse_original_path);\\n\\n        mouse_presentation_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);\\n        mouse_presentation_path.setAttribute(&quot;stroke&quot;, path_colour);\\n        mouse_presentation_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);\\n        mouse_presentation_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);\\n        mouse_presentation_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date() + &quot; presentation copy&quot;);\\n        mouse_presentation_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);\\n\\n        if (slides[activeSlide][&quot;viewGroup&quot;])\\n            slides[activeSlide][&quot;viewGroup&quot;].appendChild(mouse_presentation_path);\\n        else\\n            slides[activeSlide][&quot;element&quot;].appendChild(mouse_presentation_path);\\n\\n        history_presentation_elements.push(mouse_presentation_path);\\n\\n        return false;\\n    }\\n\\n    return true;\\n}\\n\\n/** Event handler for mouse up in drawing mode.\\n *\\n *  @param e the event\\n */\\nfunction drawingMouseup(e)\\n{\\n    if(!e)\\n        e = window.event;\\n\\n    if (mouse_presentation_path != null)\\n    {\\n        var p = calcCoord(e);\\n        var d = mouse_presentation_path.getAttribute(&quot;d&quot;);\\n        d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;\\n        mouse_presentation_path.setAttribute(&quot;d&quot;, d);\\n        mouse_presentation_path = null;\\n        mouse_original_path.setAttribute(&quot;d&quot;, d);\\n        mouse_original_path = null;\\n\\n        return false;\\n    }\\n\\n    return true;\\n}\\n\\n/** Event handler for mouse move in drawing mode.\\n *\\n *  @param e the event\\n */\\nfunction drawingMousemove(e)\\n{\\n    if(!e)\\n        e = window.event;\\n\\n    var dist = (mouse_last_x - e.clientX) * (mouse_last_x - e.clientX) + (mouse_last_y - e.clientY) * (mouse_last_y - e.clientY);\\n\\n    if (mouse_presentation_path == null)\\n    {\\n        return true;\\n    }\\n\\n    if (dist &gt;= mouse_min_dist_sqr)\\n    {\\n        var p = calcCoord(e);\\n        var d = mouse_presentation_path.getAttribute(&quot;d&quot;);\\n        d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;\\n        mouse_presentation_path.setAttribute(&quot;d&quot;, d);\\n        mouse_original_path.setAttribute(&quot;d&quot;, d);\\n        mouse_last_x = e.clientX;\\n        mouse_last_y = e.clientY;\\n    }\\n\\n    return false;\\n}\\n\\n/** Event handler for mouse wheel events in slide mode.\\n *  based on http://adomas.org/javascript-mouse-wheel/\\n *\\n *  @param e the event\\n */\\nfunction slideMousewheel(e)\\n{\\n    var delta = 0;\\n\\n    if (!e)\\n        e = window.event;\\n\\n    if (e.wheelDelta)\\n    { // IE Opera\\n        delta = e.wheelDelta/120;\\n    }\\n    else if (e.detail)\\n    { // MOZ\\n        delta = -e.detail/3;\\n    }\\n\\n    if (delta &gt; 0)\\n        skipEffects(-1);\\n    else if (delta &lt; 0)\\n        skipEffects(1);\\n\\n    if (e.preventDefault)\\n        e.preventDefault();\\n\\n    e.returnValue = false;\\n}\\n\\n/** Event handler for mouse wheel events in index mode.\\n *  based on http://adomas.org/javascript-mouse-wheel/\\n *\\n *  @param e the event\\n */\\nfunction indexMousewheel(e)\\n{\\n    var delta = 0;\\n\\n    if (!e)\\n        e = window.event;\\n\\n    if (e.wheelDelta)\\n    { // IE Opera\\n        delta = e.wheelDelta/120;\\n    }\\n    else if (e.detail)\\n    { // MOZ\\n        delta = -e.detail/3;\\n    }\\n\\n    if (delta &gt; 0)\\n        indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS);\\n    else if (delta &lt; 0)\\n        indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS);\\n\\n    if (e.preventDefault)\\n        e.preventDefault();\\n\\n    e.returnValue = false;\\n}\\n\\n/** Function to set the path paint width.\\n*/\\nfunction set_path_paint_width()\\n{\\n    var svgPoint1 = document.documentElement.createSVGPoint();\\n    var svgPoint2 = document.documentElement.createSVGPoint();\\n\\n    svgPoint1.x = 0.0;\\n    svgPoint1.y = 0.0;\\n    svgPoint2.x = 1.0;\\n    svgPoint2.y = 0.0;\\n\\n    var matrix = slides[activeSlide][&quot;element&quot;].getTransformToElement(ROOT_NODE);\\n\\n    if (slides[activeSlide][&quot;viewGroup&quot;])\\n        matrix = slides[activeSlide][&quot;viewGroup&quot;].getTransformToElement(ROOT_NODE);\\n\\n    svgPoint1 = svgPoint1.matrixTransform(matrix);\\n    svgPoint2 = svgPoint2.matrixTransform(matrix);\\n\\n    path_paint_width = path_width / Math.sqrt((svgPoint2.x - svgPoint1.x) * (svgPoint2.x - svgPoint1.x) + (svgPoint2.y - svgPoint1.y) * (svgPoint2.y - svgPoint1.y));\\n}\\n\\n/** The view effect.\\n *\\n *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)\\n *  @param element the element the effect should be applied to\\n *  @param time the time that has elapsed since the beginning of the effect\\n *  @param options a dictionary with additional options (e.g. length of the effect); for the view effect the options need to contain the old and the new matrix.\\n */\\nfunction view(dir, element, time, options)\\n{\\n    var length = 250;\\n    var fraction;\\n\\n    if (!options[&quot;matrixInitial&quot;])\\n    {\\n        var tempString = slides[activeSlide][&quot;viewGroup&quot;].getAttribute(&quot;transform&quot;);\\n\\n        if (tempString)\\n            options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromAttribute(tempString);\\n        else\\n            options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromSVGElements(1, 0, 0, 1, 0, 0);\\n    }\\n\\n    if ((time == STATE_END) || (time == STATE_START))\\n        fraction = 1;\\n    else\\n    {\\n        if (options &amp;&amp; options[&quot;length&quot;])\\n            length = options[&quot;length&quot;];\\n\\n        fraction = time / length;\\n    }\\n\\n    if (dir == 1)\\n    {\\n        if (fraction &lt;= 0)\\n        {\\n            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());\\n        }\\n        else if (fraction &gt;= 1)\\n        {\\n            element.setAttribute(&quot;transform&quot;, options[&quot;matrixNew&quot;].toAttribute());\\n\\n            set_path_paint_width();\\n\\n            options[&quot;matrixInitial&quot;] = null;\\n            return true;\\n        }\\n        else\\n        {\\n            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixNew&quot;], fraction).toAttribute());\\n        }\\n    }\\n    else if (dir == -1)\\n    {\\n        if (fraction &lt;= 0)\\n        {\\n            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());\\n        }\\n        else if (fraction &gt;= 1)\\n        {\\n            element.setAttribute(&quot;transform&quot;, options[&quot;matrixOld&quot;].toAttribute());\\n            set_path_paint_width();\\n\\n            options[&quot;matrixInitial&quot;] = null;\\n            return true;\\n        }\\n        else\\n        {\\n            element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixOld&quot;], fraction).toAttribute());\\n        }\\n    }\\n\\n    return false;\\n}\\n\\n/** The fade effect.\\n *\\n *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)\\n *  @param element the element the effect should be applied to\\n *  @param time the time that has elapsed since the beginning of the effect\\n *  @param options a dictionary with additional options (e.g. length of the effect)\\n */\\nfunction fade(dir, element, time, options)\\n{\\n    var length = 250;\\n    var fraction;\\n\\n    if ((time == STATE_END) || (time == STATE_START))\\n        fraction = 1;\\n    else\\n    {\\n        if (options &amp;&amp; options[&quot;length&quot;])\\n            length = options[&quot;length&quot;];\\n\\n        fraction = time / length;\\n    }\\n\\n    if (dir == 1)\\n    {\\n        if (fraction &lt;= 0)\\n        {\\n            element.style.display = &quot;none&quot;;\\n            element.setAttribute(&quot;opacity&quot;, 0);\\n        }\\n        else if (fraction &gt;= 1)\\n        {\\n            element.style.display = &quot;inherit&quot;;\\n            element.setAttribute(&quot;opacity&quot;, 1);\\n            return true;\\n        }\\n        else\\n        {\\n            element.style.display = &quot;inherit&quot;;\\n            element.setAttribute(&quot;opacity&quot;, fraction);\\n        }\\n    }\\n    else if (dir == -1)\\n    {\\n        if (fraction &lt;= 0)\\n        {\\n            element.style.display = &quot;inherit&quot;;\\n            element.setAttribute(&quot;opacity&quot;, 1);\\n        }\\n        else if (fraction &gt;= 1)\\n        {\\n            element.setAttribute(&quot;opacity&quot;, 0);\\n            element.style.display = &quot;none&quot;;\\n            return true;\\n        }\\n        else\\n        {\\n            element.style.display = &quot;inherit&quot;;\\n            element.setAttribute(&quot;opacity&quot;, 1 - fraction);\\n        }\\n    }\\n    return false;\\n}\\n\\n/** The appear effect.\\n *\\n *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)\\n *  @param element the element the effect should be applied to\\n *  @param time the time that has elapsed since the beginning of the effect\\n *  @param options a dictionary with additional options (e.g. length of the effect)\\n */\\nfunction appear(dir, element, time, options)\\n{\\n    if (dir == 1)\\n    {\\n        element.style.display = &quot;inherit&quot;;\\n        element.setAttribute(&quot;opacity&quot;,1);\\n    }\\n    else if (dir == -1)\\n    {\\n        element.style.display = &quot;none&quot;;\\n        element.setAttribute(&quot;opacity&quot;,0);\\n    }\\n    return true;\\n}\\n\\n/** The pop effect.\\n *\\n *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)\\n *  @param element the element the effect should be applied to\\n *  @param time the time that has elapsed since the beginning of the effect\\n *  @param options a dictionary with additional options (e.g. length of the effect)\\n */\\nfunction pop(dir, element, time, options)\\n{\\n    var length = 500;\\n    var fraction;\\n\\n    if ((time == STATE_END) || (time == STATE_START))\\n        fraction = 1;\\n    else\\n    {\\n        if (options &amp;&amp; options[&quot;length&quot;])\\n            length = options[&quot;length&quot;];\\n\\n        fraction = time / length;\\n    }\\n\\n    if (dir == 1)\\n    {\\n        if (fraction &lt;= 0)\\n        {\\n            element.setAttribute(&quot;opacity&quot;, 0);\\n            element.setAttribute(&quot;transform&quot;, &quot;scale(0)&quot;);\\n            element.style.display = &quot;none&quot;;\\n        }\\n        else if (fraction &gt;= 1)\\n        {\\n            element.setAttribute(&quot;opacity&quot;, 1);\\n            element.removeAttribute(&quot;transform&quot;);\\n            element.style.display = &quot;inherit&quot;;\\n            return true;\\n        }\\n        else\\n        {\\n            element.style.display = &quot;inherit&quot;;\\n            var opacityFraction = fraction * 3;\\n            if (opacityFraction &gt; 1)\\n                opacityFraction = 1;\\n            element.setAttribute(&quot;opacity&quot;, opacityFraction);\\n            var offsetX = WIDTH * (1.0 - fraction) / 2.0;\\n            var offsetY = HEIGHT * (1.0 - fraction) / 2.0;\\n            element.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + offsetX + &quot;,&quot; + offsetY + &quot;) scale(&quot; + fraction + &quot;)&quot;);\\n        }\\n    }\\n    else if (dir == -1)\\n    {\\n        if (fraction &lt;= 0)\\n        {\\n            element.setAttribute(&quot;opacity&quot;, 1);\\n            element.setAttribute(&quot;transform&quot;, &quot;scale(1)&quot;);\\n            element.style.display = &quot;inherit&quot;;\\n        }\\n        else if (fraction &gt;= 1)\\n        {\\n            element.setAttribute(&quot;opacity&quot;, 0);\\n            element.removeAttribute(&quot;transform&quot;);\\n            element.style.display = &quot;none&quot;;\\n            return true;\\n        }\\n        else\\n        {\\n            element.setAttribute(&quot;opacity&quot;, 1 - fraction);\\n            element.setAttribute(&quot;transform&quot;, &quot;scale(&quot; + 1 - fraction + &quot;)&quot;);\\n            element.style.display = &quot;inherit&quot;;\\n        }\\n    }\\n    return false;\\n}\\n\\n/** Function to set a slide either to the start or the end state.\\n *\\n *  @param slide the slide to use\\n *  @param state the state into which the slide should be set\\n */\\nfunction setSlideToState(slide, state)\\n{\\n    slides[slide][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, slides[slide].initialView);\\n\\n    if (slides[slide][&quot;effects&quot;])\\n    {\\n        if (state == STATE_END)\\n        {\\n            for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length; counter++)\\n            {\\n                for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)\\n                {\\n                    var effect = slides[slide][&quot;effects&quot;][counter][subCounter];\\n                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)\\n                        fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)\\n                        appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)\\n                        pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)\\n                        view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                }\\n            }\\n        }\\n        else if (state == STATE_START)\\n        {\\n            for (var counter = slides[slide][&quot;effects&quot;].length - 1; counter &gt;= 0; counter--)\\n            {\\n                for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)\\n                {\\n                    var effect = slides[slide][&quot;effects&quot;][counter][subCounter];\\n                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)\\n                        fade(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)\\n                        appear(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)\\n                        pop(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)\\n                        view(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);\\n                }\\n            }\\n        }\\n        else\\n        {\\n            setSlideToState(slide, STATE_START);\\n\\n            for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length &amp;&amp; counter &lt; state; counter++)\\n            {\\n                for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)\\n                {\\n                    var effect = slides[slide][&quot;effects&quot;][counter][subCounter];\\n                    if (effect[&quot;effect&quot;] == &quot;fade&quot;)\\n                        fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;appear&quot;)\\n                        appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;pop&quot;)\\n                        pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                    else if (effect[&quot;effect&quot;] == &quot;view&quot;)\\n                        view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);\\n                }\\n            }\\n        }\\n    }\\n\\n    window.location.hash = (activeSlide + 1) + '_' + activeEffect;\\n}\\n\\n/** Convenience function to translate a attribute string into a dictionary.\\n *\\n *    @param str the attribute string\\n *  @return a dictionary\\n *  @see dictToPropStr\\n */\\nfunction propStrToDict(str)\\n{\\n    var list = str.split(&quot;;&quot;);\\n    var obj = new Object();\\n\\n    for (var counter = 0; counter &lt; list.length; counter++)\\n    {\\n        var subStr = list[counter];\\n        var subList = subStr.split(&quot;:&quot;);\\n        if (subList.length == 2)\\n        {\\n            obj[subList[0]] = subList[1];\\n        }\\n    }\\n\\n    return obj;\\n}\\n\\n/** Convenience function to translate a dictionary into a string that can be used as an attribute.\\n *\\n *  @param dict the dictionary to convert\\n *  @return a string that can be used as an attribute\\n *  @see propStrToDict\\n */\\nfunction dictToPropStr(dict)\\n{\\n    var str = &quot;&quot;;\\n\\n    for (var key in dict)\\n    {\\n        str += key + &quot;:&quot; + dict[key] + &quot;;&quot;;\\n    }\\n\\n    return str;\\n}\\n\\n/** Sub-function to add a suffix to the ids of the node and all its children.\\n *\\n *    @param node the node to change\\n *    @param suffix the suffix to add\\n *    @param replace dictionary of replaced ids\\n *  @see suffixNodeIds\\n */\\nfunction suffixNoneIds_sub(node, suffix, replace)\\n{\\n    if (node.nodeType == 1)\\n    {\\n        if (node.getAttribute(&quot;id&quot;))\\n        {\\n            var id = node.getAttribute(&quot;id&quot;)\\n                replace[&quot;#&quot; + id] = id + suffix;\\n            node.setAttribute(&quot;id&quot;, id + suffix);\\n        }\\n\\n        if ((node.nodeName == &quot;use&quot;) &amp;&amp; (node.getAttributeNS(NSS[&quot;xlink&quot;], &quot;href&quot;)) &amp;&amp; (replace[node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;)]))\\n            node.setAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;, node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;) + suffix);\\n\\n        if (node.childNodes)\\n        {\\n            for (var counter = 0; counter &lt; node.childNodes.length; counter++)\\n                suffixNoneIds_sub(node.childNodes[counter], suffix, replace);\\n        }\\n    }\\n}\\n\\n/** Function to add a suffix to the ids of the node and all its children.\\n *\\n *    @param node the node to change\\n *    @param suffix the suffix to add\\n *  @return the changed node\\n *  @see suffixNodeIds_sub\\n */\\nfunction suffixNodeIds(node, suffix)\\n{\\n    var replace = new Object();\\n\\n    suffixNoneIds_sub(node, suffix, replace);\\n\\n    return node;\\n}\\n\\n/** Function to build a progress bar.\\n *\\n *  @param parent node to attach the progress bar to\\n */\\nfunction createProgressBar(parent_node)\\n{\\n    var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n    g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);\\n    g.setAttribute(&quot;id&quot;, &quot;layer_progress_bar&quot;);\\n    g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);\\n\\n    var rect_progress_bar = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);\\n    rect_progress_bar.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(128, 128, 128); stroke: none;&quot;);\\n    rect_progress_bar.setAttribute(&quot;id&quot;, &quot;rect_progress_bar&quot;);\\n    rect_progress_bar.setAttribute(&quot;x&quot;, 0);\\n    rect_progress_bar.setAttribute(&quot;y&quot;, 0.99 * HEIGHT);\\n    rect_progress_bar.setAttribute(&quot;width&quot;, 0);\\n    rect_progress_bar.setAttribute(&quot;height&quot;, 0.01 * HEIGHT);\\n    g.appendChild(rect_progress_bar);\\n\\n    var circle_timer_indicator = document.createElementNS(NSS[&quot;svg&quot;], &quot;circle&quot;);\\n    circle_timer_indicator.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(255, 0, 0); stroke: none;&quot;);\\n    circle_timer_indicator.setAttribute(&quot;id&quot;, &quot;circle_timer_indicator&quot;);\\n    circle_timer_indicator.setAttribute(&quot;cx&quot;, 0.005 * HEIGHT);\\n    circle_timer_indicator.setAttribute(&quot;cy&quot;, 0.995 * HEIGHT);\\n    circle_timer_indicator.setAttribute(&quot;r&quot;, 0.005 * HEIGHT);\\n    g.appendChild(circle_timer_indicator);\\n\\n    parent_node.appendChild(g);\\n}\\n\\n/** Function to hide the progress bar.\\n *\\n */\\nfunction hideProgressBar()\\n{\\n    var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);\\n\\n    if (!progress_bar)\\n    {\\n        return;\\n    }\\n\\n    progress_bar.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);\\n}\\n\\n/** Function to show the progress bar.\\n *\\n */\\nfunction showProgressBar()\\n{\\n    var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);\\n\\n    if (!progress_bar)\\n    {\\n        return;\\n    }\\n\\n    progress_bar.setAttribute(&quot;style&quot;, &quot;display: inherit;&quot;);\\n}\\n\\n/** Set progress bar value.\\n *\\n *    @param value the current slide number\\n *\\n */\\nfunction setProgressBarValue(value)\\n{\\n    var rect_progress_bar = document.getElementById(&quot;rect_progress_bar&quot;);\\n\\n    if (!rect_progress_bar)\\n    {\\n        return;\\n    }\\n\\n    if (value &lt; 1)\\n    {\\n        // First slide, assumed to be the title of the presentation\\n        var x = 0;\\n        var w = 0.01 * HEIGHT;\\n    }\\n    else if (value &gt;= slides.length - 1)\\n    {\\n        // Last slide, assumed to be the end of the presentation\\n        var x = WIDTH - 0.01 * HEIGHT;\\n        var w = 0.01 * HEIGHT;\\n    }\\n    else\\n    {\\n        value -= 1;\\n        value /= (slides.length - 2);\\n\\n        var x = WIDTH * value;\\n        var w = WIDTH / (slides.length - 2);\\n    }\\n\\n    rect_progress_bar.setAttribute(&quot;x&quot;, x);\\n    rect_progress_bar.setAttribute(&quot;width&quot;, w);\\n}\\n\\n/** Set time indicator.\\n *\\n *    @param value the percentage of time elapse so far between 0.0 and 1.0\\n *\\n */\\nfunction setTimeIndicatorValue(value)\\n{\\n    var circle_timer_indicator = document.getElementById(&quot;circle_timer_indicator&quot;);\\n\\n    if (!circle_timer_indicator)\\n    {\\n        return;\\n    }\\n\\n    if (value &lt; 0.0)\\n    {\\n        value = 0.0;\\n    }\\n\\n    if (value &gt; 1.0)\\n    {\\n        value = 1.0;\\n    }\\n\\n    var cx = (WIDTH - 0.01 * HEIGHT) * value + 0.005 * HEIGHT;\\n    circle_timer_indicator.setAttribute(&quot;cx&quot;, cx);\\n}\\n\\n/** Update timer.\\n *\\n */\\nfunction updateTimer()\\n{\\n    timer_elapsed += 1;\\n    setTimeIndicatorValue((timer_elapsed - timer_start) / (60 * timer_duration));\\n}\\n\\n/** Convert screen coordinates to document coordinates.\\n *\\n *  @param e event with screen coordinates\\n *\\n *  @return coordinates in SVG file coordinate system\\n */\\nfunction calcCoord(e)\\n{\\n    var svgPoint = document.documentElement.createSVGPoint();\\n    svgPoint.x = e.clientX + window.pageXOffset;\\n    svgPoint.y = e.clientY + window.pageYOffset;\\n\\n    var matrix = slides[activeSlide][&quot;element&quot;].getScreenCTM();\\n\\n    if (slides[activeSlide][&quot;viewGroup&quot;])\\n        matrix = slides[activeSlide][&quot;viewGroup&quot;].getScreenCTM();\\n\\n    svgPoint = svgPoint.matrixTransform(matrix.inverse());\\n    return svgPoint;\\n}\\n\\n/** Add slide.\\n *\\n *    @param after_slide after which slide the new slide should be inserted into the presentation\\n */\\nfunction addSlide(after_slide)\\n{\\n    number_of_added_slides++;\\n\\n    var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n    g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);\\n    g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date() + &quot; presentation copy&quot;);\\n    g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);\\n\\n    var new_slide = new Object();\\n    new_slide[&quot;element&quot;] = g;\\n\\n    // Set build in transition.\\n    new_slide[&quot;transitionIn&quot;] = new Object();\\n    var dict = defaultTransitionInDict;\\n    new_slide[&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];\\n    new_slide[&quot;transitionIn&quot;][&quot;options&quot;] = new Object();\\n\\n    for (key in dict)\\n        if (key != &quot;name&quot;)\\n            new_slide[&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];\\n\\n    // Set build out transition.\\n    new_slide[&quot;transitionOut&quot;] = new Object();\\n    dict = defaultTransitionOutDict;\\n    new_slide[&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];\\n    new_slide[&quot;transitionOut&quot;][&quot;options&quot;] = new Object();\\n\\n    for (key in dict)\\n        if (key != &quot;name&quot;)\\n            new_slide[&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];\\n\\n    // Copy master slide content.\\n    if (masterSlide)\\n    {\\n        var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + Date() + &quot; presentation_copy&quot;);\\n        clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);\\n        clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);\\n        clonedNode.style.display = &quot;inherit&quot;;\\n\\n        g.appendChild(clonedNode);\\n    }\\n\\n    // Substitute auto texts.\\n    substituteAutoTexts(g, &quot;Whiteboard &quot; + number_of_added_slides, &quot;W&quot; + number_of_added_slides, slides.length);\\n\\n    g.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + (after_slide + 1) + &quot;)) { indexSetActiveSlide(&quot; + (after_slide + 1) + &quot;); };&quot;);\\n\\n    // Create a transform group.\\n    var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n\\n    // Add content to transform group.\\n    while (g.firstChild)\\n        transformGroup.appendChild(g.firstChild);\\n\\n    // Transfer the transform attribute from the node to the transform group.\\n    if (g.getAttribute(&quot;transform&quot;))\\n    {\\n        transformGroup.setAttribute(&quot;transform&quot;, g.getAttribute(&quot;transform&quot;));\\n        g.removeAttribute(&quot;transform&quot;);\\n    }\\n\\n    // Create a view group.\\n    var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n\\n    viewGroup.appendChild(transformGroup);\\n    new_slide[&quot;viewGroup&quot;] = g.appendChild(viewGroup);\\n\\n    // Insert background.\\n    if (BACKGROUND_COLOR != null)\\n    {\\n        var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);\\n\\n        rectNode.setAttribute(&quot;x&quot;, 0);\\n        rectNode.setAttribute(&quot;y&quot;, 0);\\n        rectNode.setAttribute(&quot;width&quot;, WIDTH);\\n        rectNode.setAttribute(&quot;height&quot;, HEIGHT);\\n        rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + Date());\\n        rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);\\n\\n        new_slide[&quot;viewGroup&quot;].insertBefore(rectNode, new_slide[&quot;viewGroup&quot;].firstChild);\\n    }\\n\\n    // Set initial view even if there are no other views.\\n    var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);\\n\\n    new_slide[&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());\\n    new_slide.initialView = matrixOld.toAttribute();\\n\\n    // Insert slide\\n    var node = slides[after_slide][&quot;element&quot;];\\n    var next_node = node.nextSibling;\\n    var parent_node = node.parentNode;\\n\\n    if (next_node)\\n    {\\n        parent_node.insertBefore(g, next_node);\\n    }\\n    else\\n    {\\n        parent_node.appendChild(g);\\n    }\\n\\n    g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);\\n    g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);\\n    g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;Whiteboard &quot; + number_of_added_slides);\\n    g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);\\n    g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date());\\n    g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);\\n\\n    new_slide[&quot;original_element&quot;] = g;\\n\\n    node = slides[after_slide][&quot;original_element&quot;];\\n    next_node = node.nextSibling;\\n    parent_node = node.parentNode;\\n\\n    if (next_node)\\n    {\\n        parent_node.insertBefore(g, next_node);\\n    }\\n    else\\n    {\\n        parent_node.appendChild(g);\\n    }\\n\\n    before_new_slide = slides.slice(0, after_slide + 1);\\n    after_new_slide = slides.slice(after_slide + 1);\\n    slides = before_new_slide.concat(new_slide, after_new_slide);\\n\\n    //resetting the counter attributes on the slides that follow the new slide...\\n    for (var counter = after_slide+2; counter &lt; slides.length; counter++)\\n    {\\n        slides[counter][&quot;element&quot;].setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);\\n    }\\n}\\n\\n/** Convenience function to obtain a transformation matrix from a point matrix.\\n *\\n *    @param mPoints Point matrix.\\n *    @return A transformation matrix.\\n */\\nfunction pointMatrixToTransformation(mPoints)\\n{\\n    mPointsOld = (new matrixSVG()).fromElements(0, WIDTH, WIDTH, 0, 0, HEIGHT, 1, 1, 1);\\n\\n    return mPointsOld.mult(mPoints.inv());\\n}\\n\\n/** Convenience function to obtain a matrix with three corners of a rectangle.\\n *\\n *    @param rect an svg rectangle\\n *    @return a matrixSVG containing three corners of the rectangle\\n */\\nfunction rectToMatrix(rect)\\n{\\n    rectWidth = rect.getBBox().width;\\n    rectHeight = rect.getBBox().height;\\n    rectX = rect.getBBox().x;\\n    rectY = rect.getBBox().y;\\n    rectXcorr = 0;\\n    rectYcorr = 0;\\n\\n    scaleX = WIDTH / rectWidth;\\n    scaleY = HEIGHT / rectHeight;\\n\\n    if (scaleX &gt; scaleY)\\n    {\\n        scaleX = scaleY;\\n        rectXcorr -= (WIDTH / scaleX - rectWidth) / 2;\\n        rectWidth = WIDTH / scaleX;\\n    }\\n    else\\n    {\\n        scaleY = scaleX;\\n        rectYcorr -= (HEIGHT / scaleY - rectHeight) / 2;\\n        rectHeight = HEIGHT / scaleY;\\n    }\\n\\n    if (rect.transform.baseVal.numberOfItems &lt; 1)\\n    {\\n        mRectTrans = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);\\n    }\\n    else\\n    {\\n        mRectTrans = (new matrixSVG()).fromSVGMatrix(rect.transform.baseVal.consolidate().matrix);\\n    }\\n\\n    newBasePoints = (new matrixSVG()).fromElements(rectX, rectX, rectX, rectY, rectY, rectY, 1, 1, 1);\\n    newVectors = (new matrixSVG()).fromElements(rectXcorr, rectXcorr + rectWidth, rectXcorr + rectWidth, rectYcorr, rectYcorr, rectYcorr + rectHeight, 0, 0, 0);\\n\\n    return mRectTrans.mult(newBasePoints.add(newVectors));\\n}\\n\\n/** Function to handle JessyInk elements.\\n *\\n *    @param    node    Element node.\\n */\\nfunction handleElement(node)\\n{\\n    if (node.getAttributeNS(NSS['jessyink'], 'element') == 'core.video')\\n    {\\n        var url;\\n        var width;\\n        var height;\\n        var x;\\n        var y;\\n        var transform;\\n\\n        var tspans = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;tspan&quot;);\\n\\n        for (var tspanCounter = 0; tspanCounter &lt; tspans.length; tspanCounter++)\\n        {\\n            if (tspans[tspanCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;url&quot;)\\n            {\\n                url = tspans[tspanCounter].firstChild.nodeValue;\\n            }\\n        }\\n\\n        var rects = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;rect&quot;);\\n\\n        for (var rectCounter = 0; rectCounter &lt; rects.length; rectCounter++)\\n        {\\n            if (rects[rectCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;rect&quot;)\\n            {\\n                x = rects[rectCounter].getAttribute(&quot;x&quot;);\\n                y = rects[rectCounter].getAttribute(&quot;y&quot;);\\n                width = rects[rectCounter].getAttribute(&quot;width&quot;);\\n                height = rects[rectCounter].getAttribute(&quot;height&quot;);\\n                transform = rects[rectCounter].getAttribute(&quot;transform&quot;);\\n            }\\n        }\\n\\n        for (var childCounter = 0; childCounter &lt; node.childNodes.length; childCounter++)\\n        {\\n            if (node.childNodes[childCounter].nodeType == 1)\\n            {\\n                if (node.childNodes[childCounter].style)\\n                {\\n                    node.childNodes[childCounter].style.display = 'none';\\n                }\\n                else\\n                {\\n                    node.childNodes[childCounter].setAttribute(&quot;style&quot;, &quot;display: none;&quot;);\\n                }\\n            }\\n        }\\n\\n        var foreignNode = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;foreignObject&quot;);\\n        foreignNode.setAttribute(&quot;x&quot;, x);\\n        foreignNode.setAttribute(&quot;y&quot;, y);\\n        foreignNode.setAttribute(&quot;width&quot;, width);\\n        foreignNode.setAttribute(&quot;height&quot;, height);\\n        foreignNode.setAttribute(&quot;transform&quot;, transform);\\n\\n        var videoNode = document.createElementNS(&quot;http://www.w3.org/1999/xhtml&quot;, &quot;video&quot;);\\n        videoNode.setAttribute(&quot;src&quot;, url);\\n\\n        foreignNode.appendChild(videoNode);\\n        node.appendChild(foreignNode);\\n    }\\n}\\n\\n/** Class processing the location hash.\\n *\\n *    @param str location hash\\n */\\nfunction LocationHash(str)\\n{\\n    this.slideNumber = 0;\\n    this.effectNumber = 0;\\n\\n    str = str.substr(1, str.length - 1);\\n\\n    var parts = str.split('_');\\n\\n    // Try to extract slide number.\\n    if (parts.length &gt;= 1)\\n    {\\n        try\\n        {\\n            var slideNumber = parseInt(parts[0]);\\n\\n            if (!isNaN(slideNumber))\\n            {\\n                this.slideNumber = slideNumber - 1;\\n            }\\n        }\\n        catch (e)\\n        {\\n        }\\n    }\\n\\n    // Try to extract effect number.\\n    if (parts.length &gt;= 2)\\n    {\\n        try\\n        {\\n            var effectNumber = parseInt(parts[1]);\\n\\n            if (!isNaN(effectNumber))\\n            {\\n                this.effectNumber = effectNumber;\\n            }\\n        }\\n        catch (e)\\n        {\\n        }\\n    }\\n}\\n\\n/** Class representing an svg matrix.\\n*/\\nfunction matrixSVG()\\n{\\n    this.e11 = 0; // a\\n    this.e12 = 0; // c\\n    this.e13 = 0; // e\\n    this.e21 = 0; // b\\n    this.e22 = 0; // d\\n    this.e23 = 0; // f\\n    this.e31 = 0;\\n    this.e32 = 0;\\n    this.e33 = 0;\\n}\\n\\n/** Constructor function.\\n *\\n *    @param a element a (i.e. 1, 1) as described in the svg standard.\\n *    @param b element b (i.e. 2, 1) as described in the svg standard.\\n *    @param c element c (i.e. 1, 2) as described in the svg standard.\\n *    @param d element d (i.e. 2, 2) as described in the svg standard.\\n *    @param e element e (i.e. 1, 3) as described in the svg standard.\\n *    @param f element f (i.e. 2, 3) as described in the svg standard.\\n */\\nmatrixSVG.prototype.fromSVGElements = function(a, b, c, d, e, f)\\n{\\n    this.e11 = a;\\n    this.e12 = c;\\n    this.e13 = e;\\n    this.e21 = b;\\n    this.e22 = d;\\n    this.e23 = f;\\n    this.e31 = 0;\\n    this.e32 = 0;\\n    this.e33 = 1;\\n\\n    return this;\\n}\\n\\n/** Constructor function.\\n *\\n *    @param matrix an svg matrix as described in the svg standard.\\n */\\nmatrixSVG.prototype.fromSVGMatrix = function(m)\\n{\\n    this.e11 = m.a;\\n    this.e12 = m.c;\\n    this.e13 = m.e;\\n    this.e21 = m.b;\\n    this.e22 = m.d;\\n    this.e23 = m.f;\\n    this.e31 = 0;\\n    this.e32 = 0;\\n    this.e33 = 1;\\n\\n    return this;\\n}\\n\\n/** Constructor function.\\n *\\n *    @param e11 element 1, 1 of the matrix.\\n *    @param e12 element 1, 2 of the matrix.\\n *    @param e13 element 1, 3 of the matrix.\\n *    @param e21 element 2, 1 of the matrix.\\n *    @param e22 element 2, 2 of the matrix.\\n *    @param e23 element 2, 3 of the matrix.\\n *    @param e31 element 3, 1 of the matrix.\\n *    @param e32 element 3, 2 of the matrix.\\n *    @param e33 element 3, 3 of the matrix.\\n */\\nmatrixSVG.prototype.fromElements = function(e11, e12, e13, e21, e22, e23, e31, e32, e33)\\n{\\n    this.e11 = e11;\\n    this.e12 = e12;\\n    this.e13 = e13;\\n    this.e21 = e21;\\n    this.e22 = e22;\\n    this.e23 = e23;\\n    this.e31 = e31;\\n    this.e32 = e32;\\n    this.e33 = e33;\\n\\n    return this;\\n}\\n\\n/** Constructor function.\\n *\\n *    @param attrString string value of the &quot;transform&quot; attribute (currently only &quot;matrix&quot; is accepted)\\n */\\nmatrixSVG.prototype.fromAttribute = function(attrString)\\n{\\n    str = attrString.substr(7, attrString.length - 8);\\n\\n    str = str.trim();\\n\\n    strArray = str.split(&quot;,&quot;);\\n\\n    // Opera does not use commas to separate the values of the matrix, only spaces.\\n    if (strArray.length != 6)\\n        strArray = str.split(&quot; &quot;);\\n\\n    this.e11 = parseFloat(strArray[0]);\\n    this.e21 = parseFloat(strArray[1]);\\n    this.e31 = 0;\\n    this.e12 = parseFloat(strArray[2]);\\n    this.e22 = parseFloat(strArray[3]);\\n    this.e32 = 0;\\n    this.e13 = parseFloat(strArray[4]);\\n    this.e23 = parseFloat(strArray[5]);\\n    this.e33 = 1;\\n\\n    return this;\\n}\\n\\n/** Output function\\n *\\n *    @return a string that can be used as the &quot;transform&quot; attribute.\\n */\\nmatrixSVG.prototype.toAttribute = function()\\n{\\n    return &quot;matrix(&quot; + this.e11 + &quot;, &quot; + this.e21 + &quot;, &quot; + this.e12 + &quot;, &quot; + this.e22 + &quot;, &quot; + this.e13 + &quot;, &quot; + this.e23 + &quot;)&quot;;\\n}\\n\\n/** Matrix nversion.\\n *\\n *    @return the inverse of the matrix\\n */\\nmatrixSVG.prototype.inv = function()\\n{\\n    out = new matrixSVG();\\n\\n    det = this.e11 * (this.e33 * this.e22 - this.e32 * this.e23) - this.e21 * (this.e33 * this.e12 - this.e32 * this.e13) + this.e31 * (this.e23 * this.e12 - this.e22 * this.e13);\\n\\n    out.e11 =  (this.e33 * this.e22 - this.e32 * this.e23) / det;\\n    out.e12 = -(this.e33 * this.e12 - this.e32 * this.e13) / det;\\n    out.e13 =  (this.e23 * this.e12 - this.e22 * this.e13) / det;\\n    out.e21 = -(this.e33 * this.e21 - this.e31 * this.e23) / det;\\n    out.e22 =  (this.e33 * this.e11 - this.e31 * this.e13) / det;\\n    out.e23 = -(this.e23 * this.e11 - this.e21 * this.e13) / det;\\n    out.e31 =  (this.e32 * this.e21 - this.e31 * this.e22) / det;\\n    out.e32 = -(this.e32 * this.e11 - this.e31 * this.e12) / det;\\n    out.e33 =  (this.e22 * this.e11 - this.e21 * this.e12) / det;\\n\\n    return out;\\n}\\n\\n/** Matrix multiplication.\\n *\\n *    @param op another svg matrix\\n *    @return this * op\\n */\\nmatrixSVG.prototype.mult = function(op)\\n{\\n    out = new matrixSVG();\\n\\n    out.e11 = this.e11 * op.e11 + this.e12 * op.e21 + this.e13 * op.e31;\\n    out.e12 = this.e11 * op.e12 + this.e12 * op.e22 + this.e13 * op.e32;\\n    out.e13 = this.e11 * op.e13 + this.e12 * op.e23 + this.e13 * op.e33;\\n    out.e21 = this.e21 * op.e11 + this.e22 * op.e21 + this.e23 * op.e31;\\n    out.e22 = this.e21 * op.e12 + this.e22 * op.e22 + this.e23 * op.e32;\\n    out.e23 = this.e21 * op.e13 + this.e22 * op.e23 + this.e23 * op.e33;\\n    out.e31 = this.e31 * op.e11 + this.e32 * op.e21 + this.e33 * op.e31;\\n    out.e32 = this.e31 * op.e12 + this.e32 * op.e22 + this.e33 * op.e32;\\n    out.e33 = this.e31 * op.e13 + this.e32 * op.e23 + this.e33 * op.e33;\\n\\n    return out;\\n}\\n\\n/** Matrix addition.\\n *\\n *    @param op another svg matrix\\n *    @return this + op\\n */\\nmatrixSVG.prototype.add = function(op)\\n{\\n    out = new matrixSVG();\\n\\n    out.e11 = this.e11 + op.e11;\\n    out.e12 = this.e12 + op.e12;\\n    out.e13 = this.e13 + op.e13;\\n    out.e21 = this.e21 + op.e21;\\n    out.e22 = this.e22 + op.e22;\\n    out.e23 = this.e23 + op.e23;\\n    out.e31 = this.e31 + op.e31;\\n    out.e32 = this.e32 + op.e32;\\n    out.e33 = this.e33 + op.e33;\\n\\n    return out;\\n}\\n\\n/** Matrix mixing.\\n *\\n *    @param op another svg matrix\\n *    @parma contribOp contribution of the other matrix (0 &lt;= contribOp &lt;= 1)\\n *    @return (1 - contribOp) * this + contribOp * op\\n */\\nmatrixSVG.prototype.mix = function(op, contribOp)\\n{\\n    contribThis = 1.0 - contribOp;\\n    out = new matrixSVG();\\n\\n    out.e11 = contribThis * this.e11 + contribOp * op.e11;\\n    out.e12 = contribThis * this.e12 + contribOp * op.e12;\\n    out.e13 = contribThis * this.e13 + contribOp * op.e13;\\n    out.e21 = contribThis * this.e21 + contribOp * op.e21;\\n    out.e22 = contribThis * this.e22 + contribOp * op.e22;\\n    out.e23 = contribThis * this.e23 + contribOp * op.e23;\\n    out.e31 = contribThis * this.e31 + contribOp * op.e31;\\n    out.e32 = contribThis * this.e32 + contribOp * op.e32;\\n    out.e33 = contribThis * this.e33 + contribOp * op.e33;\\n\\n    return out;\\n}\\n\\n/** Trimming function for strings.\\n*/\\nString.prototype.trim = function()\\n{\\n    return this.replace(/^\\\\s+|\\\\s+$/g, '');\\n}\\n\\n/** SVGElement.getTransformToElement polyfill */\\nSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(elem) {\\n    return elem.getScreenCTM().inverse().multiply(this.getScreenCTM());\\n};\\n</script>\\n</svg>\\n\";"],"names":[],"sourceRoot":""}